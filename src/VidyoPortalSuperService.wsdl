<?xml version="1.0" encoding="UTF-8"?><wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://portal.vidyo.com/superapi/" xmlns:xs="http://www.w3.org/2001/XMLSchema" name="VidyoPortalSuperService" targetNamespace="http://portal.vidyo.com/superapi/">
  <wsdl:types>
<xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://portal.vidyo.com/superapi/">
                
      
  <xs:annotation>
        
    <xs:documentation xml:lang="en"/>
      
  </xs:annotation>
      
      
  <xs:simpleType name="EntityID">
        
    <xs:annotation>
          
      <xs:documentation>
            This is an ID of addressing object in VidyoPortal (Member, Room, or Legacy device, etc).
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:restriction base="xs:int"/>
      
  </xs:simpleType>
      
      
  <xs:simpleType name="NonNegativeInt">
        
    <xs:annotation>
          
      <xs:documentation>
            Non negative integer.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:restriction base="xs:int">
          
      <xs:minInclusive value="0"/>
        
    </xs:restriction>
      
  </xs:simpleType>
      
      
  <xs:simpleType name="String20">
        
    <xs:annotation>
          
      <xs:documentation>
            String which max length is 20.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:restriction base="xs:string">
          
      <xs:maxLength value="20"/>
        
    </xs:restriction>
      
  </xs:simpleType>
      
      
  <xs:simpleType name="NotEmptyString">
        
    <xs:annotation>
          
      <xs:documentation>
            String which min length is 1.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:restriction base="xs:string">
          
      <xs:minLength value="1"/>
        
    </xs:restriction>
      
  </xs:simpleType>
      
      
  <xs:simpleType name="TenantNamePattern">
        
    <xs:annotation>
          
      <xs:documentation>
            Pattern of tenant name.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:restriction base="xs:string">
          
      <xs:pattern value="[a-zA-Z0-9-]{1,30}"/>
        
    </xs:restriction>
      
  </xs:simpleType>
      
      
  <xs:simpleType name="TenantUrlPattern">
        
    <xs:annotation>
          
      <xs:documentation>
            Pattern of tenant url.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:restriction base="xs:string">
          
      <xs:pattern value="^[a-zA-Z0-9.\-:]+$"/>
        
    </xs:restriction>
      
  </xs:simpleType>
      
      
  <xs:simpleType name="TenantExtensionPrefixPattern">
        
    <xs:annotation>
          
      <xs:documentation>
            Pattern of tenant extension prefix.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:restriction base="xs:string">
          
      <xs:pattern value="^[0-9]{1,3}$"/>
        
    </xs:restriction>
      
  </xs:simpleType>
      
      
  <xs:simpleType name="IntHolder">
        
    <xs:annotation>
          
      <xs:documentation>
            Holder for int type elements which should be declared as nullable.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:restriction base="xs:int"/>
      
  </xs:simpleType>
      
      
  <xs:simpleType name="ComponentStatus">
        
    <xs:annotation>
          
      <xs:documentation>
            Component status.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:restriction base="xs:string">
          
      <xs:enumeration value="NEW"/>
          
      <xs:enumeration value="UP"/>
          
      <xs:enumeration value="DOWN"/>
          
      <xs:enumeration value="DISABLED"/>
        
    </xs:restriction>
      
  </xs:simpleType>
      
      
  <xs:simpleType name="SystemComponentType">
        
    <xs:annotation>
          
      <xs:documentation>
            System component type.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:restriction base="xs:string">
          
      <xs:enumeration value="VidyoRouter"/>
          
      <xs:enumeration value="VidyoProxy"/>
          
      <xs:enumeration value="VidyoManager"/>
          
      <xs:enumeration value="VidyoReplay"/>
          
      <xs:enumeration value="VidyoGateway"/>
        
    </xs:restriction>
      
  </xs:simpleType>
      
      
  <xs:simpleType name="ServiceComponentType">
        
    <xs:annotation>
          
      <xs:documentation>
            Service component type.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:restriction base="xs:string">
          
      <xs:enumeration value="VidyoManager"/>
          
      <xs:enumeration value="VidyoGateway"/>
          
      <xs:enumeration value="VidyoProxy"/>
          
      <xs:enumeration value="VidyoRecorder"/>
          
      <xs:enumeration value="VidyoReplay"/>
        
    </xs:restriction>
      
  </xs:simpleType>
      
      
  <xs:simpleType name="TenantSortingField">
        
    <xs:annotation>
          
      <xs:documentation>
            Tenant sorting field.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:restriction base="xs:string">
          
      <xs:enumeration value="tenantName"/>
          
      <xs:enumeration value="tenantURL"/>
          
      <xs:enumeration value="extensionPrefix"/>
        
    </xs:restriction>
      
  </xs:simpleType>
      
      
  <xs:simpleType name="SortingDirection">
        
    <xs:annotation>
          
      <xs:documentation>
            Sorting direction.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:restriction base="xs:string">
          
      <xs:enumeration value="ASC"/>
          
      <xs:enumeration value="DESC"/>
        
    </xs:restriction>
      
  </xs:simpleType>
      
      
  <xs:simpleType name="IpcAccessControlLevel">
        
    <xs:annotation>
          
      <xs:documentation>
            IpcAccessControl level.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:restriction base="xs:string">
          
      <xs:enumeration value="Tenant"/>
          
      <xs:enumeration value="System"/>
        
    </xs:restriction>
      
  </xs:simpleType>
      
      
  <xs:simpleType name="IpcAccessControlAccessMode">
        
    <xs:annotation>
          
      <xs:documentation>
            IpcAccessControl access mode.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:restriction base="xs:string">
          
      <xs:enumeration value="Allow"/>
          
      <xs:enumeration value="Block"/>
        
    </xs:restriction>
      
  </xs:simpleType>
      
      
  <xs:complexType name="IpcAccessControl">
        
    <xs:sequence>
          
      <xs:element name="level" type="tns:IpcAccessControlLevel"/>
          
      <xs:element minOccurs="0" name="accessMode" nillable="true" type="tns:IpcAccessControlAccessMode"/>
          
      <xs:element minOccurs="0" name="routerID" nillable="true" type="xs:string"/>
        
    </xs:sequence>
      
  </xs:complexType>
      
      
  <xs:complexType name="RouterPool">
        
    <xs:sequence>
          
      <xs:element name="routerID" type="xs:string"/>
          
      <xs:element name="routerName" type="xs:string"/>
        
    </xs:sequence>
      
  </xs:complexType>
        
      
  <xs:complexType name="SingleComponentDataType">
        
    <xs:sequence>
          
      <xs:element name="identifier" type="xs:string"/>
          
      <xs:element name="displayName" type="xs:string"/>
          
      <xs:element name="componentType" type="tns:SystemComponentType"/> 
          
      <xs:element name="ipAddress" type="xs:string"/>
          
      <xs:element maxOccurs="1" minOccurs="0" name="runningVersion" type="xs:int"/>
          
      <xs:element maxOccurs="1" minOccurs="0" name="version" type="xs:int"/>
          
      <xs:element name="alarm" type="xs:string"/>
          
      <xs:element name="swVer" type="xs:string"/>
          
      <xs:element name="componentStatus" type="tns:ComponentStatus"/>
        
    </xs:sequence>
      
  </xs:complexType>
      
      
  <xs:complexType name="SingleTenantDataType">
        
    <xs:sequence>
          
      <xs:element name="tenantId" type="tns:EntityID"/>
          
      <xs:element name="tenantName" type="xs:string"/>
          
      <xs:element minOccurs="0" name="tenantURL" type="xs:string"/>
          
      <xs:element name="extensionPrefix" type="xs:string"/>
          
      <xs:element minOccurs="0" name="dialinNumber" type="xs:string"/>
          
      <xs:element minOccurs="0" name="vidyoReplayUrl" type="xs:string"/>
          
      <xs:element minOccurs="0" name="description" type="xs:string"/>
          
      <xs:element name="vidyoMobileAllowed" type="xs:int"/>
        
    </xs:sequence>
      
  </xs:complexType>
      
      
  <xs:complexType name="TenantDataType">
        
    <xs:sequence>
            
      <xs:element name="tenantName" type="tns:TenantNamePattern"/>
            
      <xs:element name="tenantUrl" type="tns:TenantUrlPattern"/>
            
      <xs:element name="extensionPrefix" type="tns:TenantExtensionPrefixPattern"/>
            
      <xs:element minOccurs="0" name="dialinNumber" nillable="true" type="tns:String20"/>
            
      <xs:element minOccurs="0" name="vidyoReplayUrl" nillable="true" type="tns:TenantUrlPattern"/>
            
      <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
            
      <xs:element minOccurs="0" name="vidyoGatewayControllerDns" nillable="true" type="tns:TenantUrlPattern"/>
            
      <xs:element name="numOfInstalls" type="tns:NonNegativeInt"/>
            
      <xs:element name="numOfSeats" type="tns:NonNegativeInt"/>
            
      <xs:element name="numOfLines" type="tns:NonNegativeInt"/>
            
      <xs:element name="numOfExecutives" type="tns:NonNegativeInt"/>
            
      <xs:element name="numOfPanoramas" type="tns:NonNegativeInt"/>
            
      <xs:element default="1" minOccurs="0" name="enableGuestLogin" nillable="true" type="xs:boolean"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="allowedTenantList" nillable="true" type="xs:int"/>
            
      <xs:element name="vidyoManager" type="xs:int"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="vidyoProxyList" nillable="true" type="xs:int"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="allowedVidyoGatewayList" nillable="true" type="xs:int"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="allowedVidyoReplayRecorderList" nillable="true" type="xs:int"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="0" name="allowedVidyoRepalyList" nillable="true" type="xs:int"/>
            
      <xs:element maxOccurs="unbounded" minOccurs="1" name="allowedLocationTagList" type="xs:int"/>
            
      <xs:element default="1" minOccurs="0" name="vidyoMobileAllowed" nillable="true" type="xs:boolean"/>
            
      <xs:element default="1" minOccurs="0" name="ipcAllowOutbound" nillable="true" type="xs:boolean"/>
            
      <xs:element default="1" minOccurs="0" name="ipcAllowInbound" nillable="true" type="xs:boolean"/>
            
      <xs:element minOccurs="0" name="adminUser" nillable="true" type="tns:AdminMember"/>
        
    </xs:sequence>
      
  </xs:complexType>
      
      
  <xs:complexType name="TenantDataExtType">
        
    <xs:complexContent>
          
      <xs:extension base="tns:TenantDataType">
            
        <xs:sequence>
              
          <xs:element name="tenantID" type="tns:EntityID"/>
            
        </xs:sequence>
          
      </xs:extension>
        
    </xs:complexContent>
      
  </xs:complexType>
 
      
      
  <xs:element name="OK">
        
    <xs:annotation>
          
      <xs:documentation>
            String representation of successful operation - 'ok'
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:simpleType>
          
      <xs:restriction base="xs:string">
            
        <xs:enumeration value="OK"/>
          
      </xs:restriction>
        
    </xs:simpleType>
      
  </xs:element>
      
      
  <xs:element name="ErrorMessage" type="xs:string">
        
    <xs:annotation>
          
      <xs:documentation>
            String presentation of fault
          </xs:documentation>
        
    </xs:annotation>
      
  </xs:element>

      
  <xs:complexType name="LicenseFeatureData">
        
    <xs:sequence>
          
      <xs:element maxOccurs="1" minOccurs="1" name="name" type="xs:string"/>
          
      <xs:element maxOccurs="1" minOccurs="1" name="maxValue" type="xs:string"/>
          
      <xs:element maxOccurs="1" minOccurs="0" name="currentValue" type="xs:string"/>
        
    </xs:sequence>
      
  </xs:complexType>
      
      
  <xs:complexType name="ComponentData">
        
    <xs:sequence>
          
      <xs:element maxOccurs="1" minOccurs="1" name="componentType" type="tns:ServiceComponentType"/>
          
      <xs:element maxOccurs="1" minOccurs="1" name="identifier" type="xs:string"/>
          
      <xs:element maxOccurs="1" minOccurs="0" name="displayName" type="xs:string"/>
        
    </xs:sequence>
      
  </xs:complexType>
      
      
  <xs:complexType name="LocationTag">
        
    <xs:sequence>
          
      <xs:element name="locationTagID" type="xs:int"/>
          
      <xs:element name="locationTagName" type="xs:string"/>
        
    </xs:sequence>
      
  </xs:complexType>
      
      
  <xs:complexType name="AdminMember">
        
    <xs:annotation>
          
      <xs:documentation>
            Admin user description on VidyoPortal for ternant creation.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:sequence>
          
      <xs:element name="name" type="xs:string"/>
          
      <xs:element name="password" type="xs:string"/>
          
      <xs:element name="displayName" type="xs:string"/>
          
      <xs:element name="emailAddress" type="xs:string"/>
          
      <xs:element minOccurs="0" name="description" type="xs:string"/>
        
    </xs:sequence>
      
  </xs:complexType>
      
      
  <xs:complexType name="Banner">
        
    <xs:sequence>
          
      <xs:element name="showLoginBanner" type="xs:boolean"/>
          
      <xs:element name="showWelcomeBanner" type="xs:boolean"/>
          
      <xs:element minOccurs="0" name="loginBannerText" nillable="true" type="xs:string"/>
          
      <xs:element minOccurs="0" name="welcomeBannerText" nillable="true" type="xs:string"/>
        
    </xs:sequence>
      
  </xs:complexType>
      
      
  <xs:complexType name="ChatState">
        
    <xs:sequence>
          
      <xs:element minOccurs="0" name="chatAvailability" type="xs:boolean"/>
          
      <xs:element minOccurs="0" name="privateChatState" type="xs:boolean"/>
          
      <xs:element minOccurs="0" name="publicChatState" type="xs:boolean"/>
        
    </xs:sequence>
      
  </xs:complexType>

      
  <xs:element name="GetLicenseDataRequest">
        
    <xs:annotation>
          
      <xs:documentation>
            Request for currently effective license data.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element minOccurs="0" name="tenantId" nillable="true" type="tns:EntityID"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
      
      
  <xs:element name="GetLicenseDataResponse">
        
    <xs:annotation>
          
      <xs:documentation>
            License Data currently in effect.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element maxOccurs="unbounded" name="licenseFeature" type="tns:LicenseFeatureData"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
      
      
  <xs:element name="GetServiceComponentsDataRequest">
        
    <xs:annotation>
          
      <xs:documentation>
            Request for list of service components data.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element minOccurs="0" name="serviceComponentType" nillable="true" type="tns:ServiceComponentType"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
      
      
  <xs:element name="GetServiceComponentsDataResponse">
        
    <xs:annotation>
          
      <xs:documentation>
            List of service components data.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element maxOccurs="unbounded" minOccurs="0" name="component" type="tns:ComponentData"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
       
      
  <xs:element name="ListNetworkComponentsRequest">
        
    <xs:annotation>
          
      <xs:documentation>
            Request for list of network components.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element minOccurs="0" name="componentName" type="xs:string"/>
            
        <xs:element minOccurs="0" name="componentType" type="tns:SystemComponentType"/>
            
        <xs:element minOccurs="0" name="status" type="tns:ComponentStatus"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
	
      
  <xs:element name="ListNetworkComponentsResponse">
        
    <xs:annotation>
          
      <xs:documentation>
            A list of network components.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element maxOccurs="unbounded" minOccurs="0" name="networkComponent" type="tns:SingleComponentDataType"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
      
      
  <xs:element name="ListTenantsRequest">
        
    <xs:annotation>
          
      <xs:documentation>
            Request for list of tenants.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element minOccurs="0" name="tenantName" type="xs:string"/>
            
        <xs:element minOccurs="0" name="tenantURL" type="xs:string"/>
            
        <xs:element minOccurs="0" name="start" nillable="true" type="tns:IntHolder"/>
            
        <xs:element minOccurs="0" name="limit" nillable="true" type="tns:IntHolder"/>
            
        <xs:element minOccurs="0" name="sortBy" type="tns:TenantSortingField"/>
            
        <xs:element minOccurs="0" name="dir" type="tns:SortingDirection"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
	
      
  <xs:element name="ListTenantsResponse">
        
    <xs:annotation>
          
      <xs:documentation>
            A list of tenants.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element maxOccurs="unbounded" minOccurs="0" name="tenant" type="tns:SingleTenantDataType"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
      
      
  <xs:element name="CreateTenantRequest">
        
    <xs:annotation>
          
      <xs:documentation>
            Request for tenant creation.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element name="TenantData" type="tns:TenantDataType"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
	
      
  <xs:element name="CreateTenantResponse">
        
    <xs:annotation>
          
      <xs:documentation>
            OK.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element ref="tns:OK"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
      
      
  <xs:element name="DeleteTenantRequest">
        
    <xs:annotation>
          
      <xs:documentation>
            Request for tenant deletion.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element name="tenantId" type="tns:EntityID"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
	
      
  <xs:element name="DeleteTenantResponse">
        
    <xs:annotation>
          
      <xs:documentation>
            OK.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element ref="tns:OK"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
      
      
  <xs:element name="GetTenantDetailsRequest">
        
    <xs:annotation>
          
      <xs:documentation>
            Request for getting tenant details.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element name="tenantId" type="tns:EntityID"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
	
      
  <xs:element name="GetTenantDetailsResponse">
        
    <xs:annotation>
          
      <xs:documentation>
            Tenant details.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element name="tenantDetail" type="tns:TenantDataExtType"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
      
      
  <xs:element name="UpdateTenantRequest">
        
    <xs:annotation>
          
      <xs:documentation>
            Request for tenant update.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element name="tenantData" type="tns:TenantDataExtType"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
	
      
  <xs:element name="UpdateTenantResponse">
        
    <xs:annotation>
          
      <xs:documentation>
            OK.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element ref="tns:OK"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
      
      
  <xs:element name="setIpcAccessControlRequest">
        
    <xs:annotation>
          
      <xs:documentation>
            Request for setting IpcAccessControl.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element name="ipcAccessControl" type="tns:IpcAccessControl"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
	
      
  <xs:element name="setIpcAccessControlResponse">
        
    <xs:annotation>
          
      <xs:documentation>
            OK.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element ref="tns:OK"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
      
      
  <xs:element name="setIpcDomainsRequest">
        
    <xs:annotation>
          
      <xs:documentation>
            Request for setting IpcDomains.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element maxOccurs="unbounded" minOccurs="0" name="addIpcDomainList" nillable="true" type="tns:NotEmptyString"/>
            
        <xs:element maxOccurs="unbounded" minOccurs="0" name="removeIpcDomainList" nillable="true" type="tns:NotEmptyString"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
	
      
  <xs:element name="setIpcDomainsResponse">
        
    <xs:annotation>
          
      <xs:documentation>
            Acknowledgement that some domains were added/removed successfully. Specifies the list of domains that were not deleted/added
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element ref="tns:OK"/>
            
        <xs:element maxOccurs="unbounded" minOccurs="0" name="notAddedIpcDomainList" nillable="true" type="xs:string"/>
            
        <xs:element maxOccurs="unbounded" minOccurs="0" name="notRemovedIpcDomainList" nillable="true" type="xs:string"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
      
      
  <xs:element name="saveDBRequest">
        
    <xs:annotation>
          
      <xs:documentation>
            Request for saving DB.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
          </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
	
      
  <xs:element name="saveDBResponse">
        
    <xs:annotation>
          
      <xs:documentation>
            Saved DB file name.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element name="databaseName" type="xs:string"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
      
      
  <xs:element name="deleteDBRequest">
        
    <xs:annotation>
          
      <xs:documentation>
            Request for deleting backup DB file.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element name="databaseName" type="xs:string"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
	
      
  <xs:element name="deleteDBResponse">
        
    <xs:annotation>
          
      <xs:documentation>
            Ok.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element ref="tns:OK"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
      
      
  <xs:element name="getIpcAccessControlRequest">
        
    <xs:annotation>
          
      <xs:documentation>
            Request for getting IpcAccessControl.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
          </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
	
      
  <xs:element name="getIpcAccessControlResponse">
        
    <xs:annotation>
          
      <xs:documentation>
            Response for getting IpcAccessControl.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element name="ipcAccessControl" type="tns:IpcAccessControl"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
      
      
  <xs:element name="getIpcDomainListRequest">
        
    <xs:annotation>
          
      <xs:documentation>
            Request for getting Allowed or Blocked IpcDomainList.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
          </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
	
      
  <xs:element name="getIpcDomainListResponse">
        
    <xs:annotation>
          
      <xs:documentation>
            Response for getting Allowed or Blocked IpcDomainList.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element maxOccurs="unbounded" minOccurs="0" name="ipcDomainList" nillable="true" type="xs:string"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
      
      
  <xs:element name="getRouterPoolListRequest">
        
    <xs:annotation>
          
      <xs:documentation>
            Request for getting RouterPoolList.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
          </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
	
      
  <xs:element name="getRouterPoolListResponse">
        
    <xs:annotation>
          
      <xs:documentation>
            Response for getting RouterPoolList.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element maxOccurs="unbounded" minOccurs="0" name="routerPoolsList" nillable="true" type="tns:RouterPool"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
      
      
  <xs:element name="getLocationTagsRequest">
        
    <xs:annotation>
          
      <xs:documentation>
            Request for getting LocationTags.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
          </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
	
      
  <xs:element name="getLocationTagsResponse">
        
    <xs:annotation>
          
      <xs:documentation>
            Response for getting LocationTags.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element maxOccurs="unbounded" minOccurs="0" name="locationTagsList" nillable="true" type="tns:LocationTag"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
      
      
  <xs:element name="setLoginAndWelcomeBannerRequest">
        
    <xs:annotation>
          
      <xs:documentation>
            Request for setting Login And Welcome Banners.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element name="banner" type="tns:Banner"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
	
      
  <xs:element name="setLoginAndWelcomeBannerResponse">
        
    <xs:annotation>
          
      <xs:documentation>
            Response for getting Login And Welcome Banners.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element name="banner" type="tns:Banner"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
      
      
  <xs:element name="setChatStateSuperRequest">
        
    <xs:annotation>
          
      <xs:documentation>
            Request for setting Chat state.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element name="chatState" type="tns:ChatState"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
	
      
  <xs:element name="setChatStateSuperResponse">
        
    <xs:annotation>
          
      <xs:documentation>
            Response for getting Chat state.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element ref="tns:OK"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
      
      
  <xs:element name="getChatStateSuperRequest">
        
    <xs:annotation>
          
      <xs:documentation>
            Request for getting Chat state.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
          </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
	
      
  <xs:element name="getChatStateSuperResponse">
        
    <xs:annotation>
          
      <xs:documentation>
            Response for getting Chat state.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element name="chatState" type="tns:ChatState"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>

      <!-- Exceptions -->
      
  <xs:element name="GeneralFault">
        
    <xs:annotation>
          
      <xs:documentation>
            This means that the exceptions happens in system.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element ref="tns:ErrorMessage"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>

      
  <xs:element name="NotLicensedFault">
        
    <xs:annotation>
          
      <xs:documentation>
            This means that the Portal has not Portal API license.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element ref="tns:ErrorMessage"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
      
      
  <xs:element name="InvalidTenantFault">
        
    <xs:annotation>
          
      <xs:documentation>
            This means that the tenantID which is passed into service is wrong.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element ref="tns:ErrorMessage"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
      
      
  <xs:element name="InvalidArgumentFault">
        
    <xs:annotation>
          
      <xs:documentation>
            This means that the argument which is passed into service is wrong.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element ref="tns:ErrorMessage"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
      
      
  <xs:element name="NotAuthorizedFault">
        
    <xs:annotation>
          
      <xs:documentation>
            This means that user which trying to access the API is not authorized super user.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element ref="tns:ErrorMessage"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
      
      
  <xs:element name="ExistingTenantFault">
        
    <xs:annotation>
          
      <xs:documentation>
            The specified Tenant name or URL already exist.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element ref="tns:ErrorMessage"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
      
      
  <xs:element name="MissingArgumentFault">
        
    <xs:annotation>
          
      <xs:documentation>
            Some required request parameters were not specified.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element ref="tns:ErrorMessage"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
      
      
  <xs:element name="IncorrectIpcAccessLevelFault">
        
    <xs:annotation>
          
      <xs:documentation>
            Generated when the user doesn't have access to get IPC domain access.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element ref="tns:ErrorMessage"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>
      
      
  <xs:element name="BannerTextFault">
        
    <xs:annotation>
          
      <xs:documentation>
            Specifies that the content provided overrides the character limit.
          </xs:documentation>
        
    </xs:annotation>
        
    <xs:complexType>
          
      <xs:sequence>
            
        <xs:element ref="tns:ErrorMessage"/>
          
      </xs:sequence>
        
    </xs:complexType>
      
  </xs:element>

    
</xs:schema>
  </wsdl:types>
  <wsdl:message name="getRouterPoolListInput">
    <wsdl:part element="tns:getRouterPoolListRequest" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ListNetworkComponentsOutput">
    <wsdl:part element="tns:ListNetworkComponentsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setIpcDomainsInput">
    <wsdl:part element="tns:setIpcDomainsRequest" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="NotLicensedFault">
    <wsdl:part element="tns:NotLicensedFault" name="fault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLocationTagsOutput">
    <wsdl:part element="tns:getLocationTagsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getIpcAccessControlOutput">
    <wsdl:part element="tns:getIpcAccessControlResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setChatStateSuperInput">
    <wsdl:part element="tns:setChatStateSuperRequest" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRouterPoolListOutput">
    <wsdl:part element="tns:getRouterPoolListResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getChatStateSuperOutput">
    <wsdl:part element="tns:getChatStateSuperResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetServiceComponentsDataInput">
    <wsdl:part element="tns:GetServiceComponentsDataRequest" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GeneralFault">
    <wsdl:part element="tns:GeneralFault" name="fault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ExistingTenantFault">
    <wsdl:part element="tns:ExistingTenantFault" name="fault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ListNetworkComponentsInput">
    <wsdl:part element="tns:ListNetworkComponentsRequest" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidArgumentFault">
    <wsdl:part element="tns:InvalidArgumentFault" name="fault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetTenantDetailsOutput">
    <wsdl:part element="tns:GetTenantDetailsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DeleteTenantOutput">
    <wsdl:part element="tns:DeleteTenantResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setLoginAndWelcomeBannerInput">
    <wsdl:part element="tns:setLoginAndWelcomeBannerRequest" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateTenantOutput">
    <wsdl:part element="tns:CreateTenantResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetTenantDetailsInput">
    <wsdl:part element="tns:GetTenantDetailsRequest" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateTenantInput">
    <wsdl:part element="tns:UpdateTenantRequest" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLocationTagsInput">
    <wsdl:part element="tns:getLocationTagsRequest" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getIpcAccessControlInput">
    <wsdl:part element="tns:getIpcAccessControlRequest" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="MissingArgumentFault">
    <wsdl:part element="tns:MissingArgumentFault" name="fault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="saveDBInput">
    <wsdl:part element="tns:saveDBRequest" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ListTenantsOutput">
    <wsdl:part element="tns:ListTenantsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetLicenseDataInput">
    <wsdl:part element="tns:GetLicenseDataRequest" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ListTenantsInput">
    <wsdl:part element="tns:ListTenantsRequest" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setIpcAccessControlInput">
    <wsdl:part element="tns:setIpcAccessControlRequest" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="UpdateTenantOutput">
    <wsdl:part element="tns:UpdateTenantResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="CreateTenantInput">
    <wsdl:part element="tns:CreateTenantRequest" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="NotAuthorizedFault">
    <wsdl:part element="tns:NotAuthorizedFault" name="fault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteDBInput">
    <wsdl:part element="tns:deleteDBRequest" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="saveDBOutput">
    <wsdl:part element="tns:saveDBResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getIpcDomainListInput">
    <wsdl:part element="tns:getIpcDomainListRequest" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetServiceComponentsDataOutput">
    <wsdl:part element="tns:GetServiceComponentsDataResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getChatStateSuperInput">
    <wsdl:part element="tns:getChatStateSuperRequest" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="DeleteTenantInput">
    <wsdl:part element="tns:DeleteTenantRequest" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setChatStateSuperOutput">
    <wsdl:part element="tns:setChatStateSuperResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="BannerTextFault">
    <wsdl:part element="tns:BannerTextFault" name="fault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GetLicenseDataOutput">
    <wsdl:part element="tns:GetLicenseDataResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidTenantFault">
    <wsdl:part element="tns:InvalidTenantFault" name="fault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getIpcDomainListOutput">
    <wsdl:part element="tns:getIpcDomainListResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setIpcDomainsOutput">
    <wsdl:part element="tns:setIpcDomainsResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteDBOutput">
    <wsdl:part element="tns:deleteDBResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setIpcAccessControlOutput">
    <wsdl:part element="tns:setIpcAccessControlResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setLoginAndWelcomeBannerOutput">
    <wsdl:part element="tns:setLoginAndWelcomeBannerResponse" name="parameters">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="IncorrectIpcAccessLevelFault">
    <wsdl:part element="tns:IncorrectIpcAccessLevelFault" name="fault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="VidyoPortalSuperServicePortType">
    <wsdl:operation name="getLicenseData">
<wsdl:documentation>Provides license data. If a tenant is not specified, the license parameters should be provided for all tenants as a Total number</wsdl:documentation>
      <wsdl:input message="tns:GetLicenseDataInput">
    </wsdl:input>
      <wsdl:output message="tns:GetLicenseDataOutput">
    </wsdl:output>
      <wsdl:fault message="tns:NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="tns:GeneralFault" name="GeneralFault">
    </wsdl:fault>
      <wsdl:fault message="tns:NotAuthorizedFault" name="NotAuthorizedFault">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidTenantFault" name="InvalidTenantFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getServiceComponentsData">
<wsdl:documentation>Provides the list of available service components. If the type is not specified, all lists will be provided. If the type is specified, only the list associated with this type will be provided</wsdl:documentation>
      <wsdl:input message="tns:GetServiceComponentsDataInput">
    </wsdl:input>
      <wsdl:output message="tns:GetServiceComponentsDataOutput">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="tns:GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listNetworkComponents">
<wsdl:documentation>List all network components</wsdl:documentation>
      <wsdl:input message="tns:ListNetworkComponentsInput">
    </wsdl:input>
      <wsdl:output message="tns:ListNetworkComponentsOutput">
    </wsdl:output>
      <wsdl:fault message="tns:GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getListOfTenants">
<wsdl:documentation>Provides the list of all tenants in the system with the following filters. All filters are optional and if a filter is not provided the query will use the defaults, which are sorting in a descending order all the tenants by the tenant names.</wsdl:documentation>
      <wsdl:input message="tns:ListTenantsInput">
    </wsdl:input>
      <wsdl:output message="tns:ListTenantsOutput">
    </wsdl:output>
      <wsdl:fault message="tns:GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createTenant">
<wsdl:documentation>Create a new tenant based on the information provided below.</wsdl:documentation>
      <wsdl:input message="tns:CreateTenantInput">
    </wsdl:input>
      <wsdl:output message="tns:CreateTenantOutput">
    </wsdl:output>
      <wsdl:fault message="tns:NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="tns:GeneralFault" name="GeneralFault">
    </wsdl:fault>
      <wsdl:fault message="tns:ExistingTenantFault" name="ExistingTenantFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteTenant">
<wsdl:documentation>Deleting an existing tenant from the system. The default tenant can not be deleted.</wsdl:documentation>
      <wsdl:input message="tns:DeleteTenantInput">
    </wsdl:input>
      <wsdl:output message="tns:DeleteTenantOutput">
    </wsdl:output>
      <wsdl:fault message="tns:GeneralFault" name="GeneralFault">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidTenantFault" name="InvalidTenantFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTenantDetails">
<wsdl:documentation>Get the tenant details based on the tenant ID.</wsdl:documentation>
      <wsdl:input message="tns:GetTenantDetailsInput">
    </wsdl:input>
      <wsdl:output message="tns:GetTenantDetailsOutput">
    </wsdl:output>
      <wsdl:fault message="tns:GeneralFault" name="GeneralFault">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidTenantFault" name="InvalidTenantFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateTenant">
<wsdl:documentation>Update an existing tenant by the tenant ID. Each optional parameter that is provided aside from the tenant ID will overwrite the existing parameters.</wsdl:documentation>
      <wsdl:input message="tns:UpdateTenantInput">
    </wsdl:input>
      <wsdl:output message="tns:UpdateTenantOutput">
    </wsdl:output>
      <wsdl:fault message="tns:NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="tns:GeneralFault" name="GeneralFault">
    </wsdl:fault>
      <wsdl:fault message="tns:ExistingTenantFault" name="ExistingTenantFault">
    </wsdl:fault>
      <wsdl:fault message="tns:InvalidTenantFault" name="InvalidTenantFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setIpcAccessControl">
<wsdl:documentation>Define IPC control access (Allow / Block) for Tenant and System levels.</wsdl:documentation>
      <wsdl:input message="tns:setIpcAccessControlInput">
    </wsdl:input>
      <wsdl:output message="tns:setIpcAccessControlOutput">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="tns:MissingArgumentFault" name="MissingArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="tns:GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setIpcDomains">
<wsdl:documentation>Add and / or remove a list of allowed IPC domains. The user can add and remove IPC domains at the same time.</wsdl:documentation>
      <wsdl:input message="tns:setIpcDomainsInput">
    </wsdl:input>
      <wsdl:output message="tns:setIpcDomainsOutput">
    </wsdl:output>
      <wsdl:fault message="tns:GeneralFault" name="GeneralFault">
    </wsdl:fault>
      <wsdl:fault message="tns:IncorrectIpcAccessLevelFault" name="IncorrectIpcAccessLevelFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="saveDb">
<wsdl:documentation>Save all tenant and user information about the entire system, and provides the saved backup file name.</wsdl:documentation>
      <wsdl:input message="tns:saveDBInput">
    </wsdl:input>
      <wsdl:output message="tns:saveDBOutput">
    </wsdl:output>
      <wsdl:fault message="tns:GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteDb">
<wsdl:documentation>Delete saved database backup from the disk.</wsdl:documentation>
      <wsdl:input message="tns:deleteDBInput">
    </wsdl:input>
      <wsdl:output message="tns:deleteDBOutput">
    </wsdl:output>
      <wsdl:fault message="tns:InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="tns:GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getIpcAccessControl">
<wsdl:documentation>Provide the level of access that user has to view and modify allowed IPC domains.</wsdl:documentation>
      <wsdl:input message="tns:getIpcAccessControlInput">
    </wsdl:input>
      <wsdl:output message="tns:getIpcAccessControlOutput">
    </wsdl:output>
      <wsdl:fault message="tns:GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getIpcDomainList">
<wsdl:documentation>Get the list of all allowed or blocked IPC domains that are stored the database.</wsdl:documentation>
      <wsdl:input message="tns:getIpcDomainListInput">
    </wsdl:input>
      <wsdl:output message="tns:getIpcDomainListOutput">
    </wsdl:output>
      <wsdl:fault message="tns:GeneralFault" name="GeneralFault">
    </wsdl:fault>
      <wsdl:fault message="tns:IncorrectIpcAccessLevelFault" name="IncorrectIpcAccessLevelFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRouterPoolList">
<wsdl:documentation>Retrieve the pool of routers.</wsdl:documentation>
      <wsdl:input message="tns:getRouterPoolListInput">
    </wsdl:input>
      <wsdl:output message="tns:getRouterPoolListOutput">
    </wsdl:output>
      <wsdl:fault message="tns:GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLocationTags">
<wsdl:documentation>Provide the location tags available on the portal.</wsdl:documentation>
      <wsdl:input message="tns:getLocationTagsInput">
    </wsdl:input>
      <wsdl:output message="tns:getLocationTagsOutput">
    </wsdl:output>
      <wsdl:fault message="tns:GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setLoginAndWelcomeBanner">
<wsdl:documentation>Set the login and welcome banner parameters on the VidyoPortal tenants and enable / disable the feature altogether.</wsdl:documentation>
      <wsdl:input message="tns:setLoginAndWelcomeBannerInput">
    </wsdl:input>
      <wsdl:output message="tns:setLoginAndWelcomeBannerOutput">
    </wsdl:output>
      <wsdl:fault message="tns:BannerTextFault" name="BannerTextFault">
    </wsdl:fault>
      <wsdl:fault message="tns:GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setChatStateSuper">
<wsdl:documentation>
          The objective of this API is to set whether chat is available on the VidyoPortal and the default values for private / public chat on the newly created tenants. 
          Once made unavailable, tenant admins will not be able to enable chat on the VidyoPortal and Vidyo clients joining the conferences on this VidyoPortal won't be able to engage in chat conversations.
      </wsdl:documentation>
      <wsdl:input message="tns:setChatStateSuperInput">
    </wsdl:input>
      <wsdl:output message="tns:setChatStateSuperOutput">
    </wsdl:output>
      <wsdl:fault message="tns:GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getChatStateSuper">
<wsdl:documentation>
          The objective of this API is to get the configured value for chat availability on the VidyoPortal as well as the default values for private and public chat for newly created tenants.
      </wsdl:documentation>
      <wsdl:input message="tns:getChatStateSuperInput">
    </wsdl:input>
      <wsdl:output message="tns:getChatStateSuperOutput">
    </wsdl:output>
      <wsdl:fault message="tns:GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="VidyoPortalSuperServiceBinding" type="tns:VidyoPortalSuperServicePortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getLicenseData">
      <soap:operation soapAction="getLicenseData"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="NotAuthorizedFault">
        <soap:fault name="NotAuthorizedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidTenantFault">
        <soap:fault name="InvalidTenantFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getServiceComponentsData">
      <soap:operation soapAction="getServiceComponentsData"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="listNetworkComponents">
      <soap:operation soapAction="listNetworkComponents"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getListOfTenants">
      <soap:operation soapAction="getListOfTenants"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createTenant">
      <soap:operation soapAction="createTenant"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ExistingTenantFault">
        <soap:fault name="ExistingTenantFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteTenant">
      <soap:operation soapAction="deleteTenant"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidTenantFault">
        <soap:fault name="InvalidTenantFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTenantDetails">
      <soap:operation soapAction="getTenantDetails"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidTenantFault">
        <soap:fault name="InvalidTenantFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateTenant">
      <soap:operation soapAction="updateTenant"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ExistingTenantFault">
        <soap:fault name="ExistingTenantFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidTenantFault">
        <soap:fault name="InvalidTenantFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setIpcAccessControl">
      <soap:operation soapAction="setIpcAccessControl"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MissingArgumentFault">
        <soap:fault name="MissingArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setIpcDomains">
      <soap:operation soapAction="setIpcDomains"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="IncorrectIpcAccessLevelFault">
        <soap:fault name="IncorrectIpcAccessLevelFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="saveDb">
      <soap:operation soapAction="saveDb"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteDb">
      <soap:operation soapAction="deleteDb"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getIpcAccessControl">
      <soap:operation soapAction="getIpcAccessControl"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getIpcDomainList">
      <soap:operation soapAction="getIpcDomainList"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="IncorrectIpcAccessLevelFault">
        <soap:fault name="IncorrectIpcAccessLevelFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRouterPoolList">
      <soap:operation soapAction="getRouterPoolList"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLocationTags">
      <soap:operation soapAction="getLocationTags"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setLoginAndWelcomeBanner">
      <soap:operation soapAction="setLoginAndWelcomeBanner"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="BannerTextFault">
        <soap:fault name="BannerTextFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setChatStateSuper">
      <soap:operation soapAction="setChatStateSuper"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getChatStateSuper">
      <soap:operation soapAction="getChatStateSuper"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="VidyoPortalSuperService">
    <wsdl:port binding="tns:VidyoPortalSuperServiceBinding" name="VidyoPortalSuperServicePort">
      <soap:address location="http://bj.vidyo.com/services/VidyoPortalSuperService/"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
