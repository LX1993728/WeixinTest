<?xml version="1.0" encoding="UTF-8"?><wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns="http://portal.vidyo.com/admin/v1_1" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xs="http://www.w3.org/2001/XMLSchema" name="VidyoPortalAdminService" targetNamespace="http://portal.vidyo.com/admin/v1_1">
  <wsdl:types>
<xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://portal.vidyo.com/admin/v1_1">

  <xs:annotation>

    <xs:documentation xml:lang="en"/>

  </xs:annotation>

  <xs:element name="OK">

    <xs:annotation>

      <xs:documentation>
String representation of successful operation - 'OK'
</xs:documentation>

    </xs:annotation>

    <xs:simpleType>

      <xs:restriction base="xs:string">

        <xs:enumeration value="OK"/>

      </xs:restriction>

    </xs:simpleType>

  </xs:element>

  <xs:element name="ErrorMessage" type="xs:string">

    <xs:annotation>

      <xs:documentation>String presentation of fault</xs:documentation>

    </xs:annotation>

  </xs:element>

  <xs:element name="Language">

    <xs:annotation>

      <xs:documentation>Languages supported by VidyoPortal</xs:documentation>

    </xs:annotation>

    <xs:simpleType>

      <xs:restriction base="xs:string">

        <xs:enumeration value="en"/>

        <xs:enumeration value="de"/>

        <xs:enumeration value="es"/>

        <xs:enumeration value="fr"/>

        <xs:enumeration value="it"/>

        <xs:enumeration value="ja"/>

        <xs:enumeration value="ko"/>

        <xs:enumeration value="pt"/>

        <xs:enumeration value="zh_CN"/>

        <xs:enumeration value="fi"/>

        <xs:enumeration value="pl"/>

        <xs:enumeration value="zh_TW"/>

        <xs:enumeration value="th"/>

        <xs:enumeration value="ru"/>

        <xs:enumeration value="tr"/>

      </xs:restriction>

    </xs:simpleType>

  </xs:element>

  <xs:element name="RoleName">

    <xs:annotation>

      <xs:documentation>Member's Role supported by VidyoPortal</xs:documentation>

    </xs:annotation>

    <xs:simpleType>

      <xs:restriction base="xs:string">

        <xs:enumeration value="Admin"/>

        <xs:enumeration value="Operator"/>

        <xs:enumeration value="Normal"/>

        <xs:enumeration value="VidyoRoom"/>

        <xs:enumeration value="Legacy"/>

        <xs:enumeration value="Executive"/>

        <xs:enumeration value="Panorama"/>

      </xs:restriction>

    </xs:simpleType>

  </xs:element>

  <xs:simpleType name="sortDir">

    <xs:restriction base="xs:string">

      <xs:enumeration value="ASC"/>

      <xs:enumeration value="DESC"/>

    </xs:restriction>

  </xs:simpleType>

  <xs:element name="Filter">

    <xs:annotation>

      <xs:documentation>
Filter for search queries. A SOAP fault will be thrown if limit exceeds 200. Default value for limit is 40. Anything higher than 40 may result in poor system performance.
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element minOccurs="0" name="start" nillable="true" type="xs:int"/>

        <xs:element minOccurs="0" name="limit" nillable="true" type="xs:int"/>

        <xs:element minOccurs="0" name="sortBy" nillable="true" type="xs:string"/>

        <xs:element minOccurs="0" name="dir" nillable="true" type="sortDir"/>

        <xs:element minOccurs="0" name="query" nillable="true" type="xs:string"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="EntityType">

    <xs:annotation>

      <xs:documentation>
There are three types of entities in VidyoPortal: 1. Member - A member is an authorized user of VidyoPortal with a user account. - A member may have at the most one personal room. - A member has a display name - A member has an extension that can also be used for search purposes. 2. Rooom - It is a meeting place. Rooms are of two kinds: - Personal, as explained above - Public. Each room has a owner assigned who can control the room. 3. Legacy - This entity represents external endpoints. Think of it as a label to identify and search external devices. Legacy entity does not have an account on the VidyoPortal. There is no owner assigned to legacy devices.
</xs:documentation>

    </xs:annotation>

    <xs:simpleType>

      <xs:restriction base="xs:string">

        <xs:enumeration value="Member"/>

        <xs:enumeration value="Room"/>

        <xs:enumeration value="Legacy"/>

      </xs:restriction>

    </xs:simpleType>

  </xs:element>

  <xs:element name="MemberMode">

    <xs:annotation>

      <xs:documentation>
The Member can override the current status with these possible values. Changing a mode will impact VidyoPortal operations. For e.g. if the mode is set to DoNotDisturb for a member, this member will not get any incoming requests to join a meeting or a direct call.
</xs:documentation>

    </xs:annotation>

    <xs:simpleType>

      <xs:restriction base="xs:string">

        <xs:enumeration value="Available"/>

        <xs:enumeration value="Away"/>

        <xs:enumeration value="DoNotDisturb"/>

      </xs:restriction>

    </xs:simpleType>

  </xs:element>

  <xs:element name="MemberStatus">

    <xs:annotation>

      <xs:documentation>
Describes the member status based on the operation state of the endpoint in use by the member: - Status is 'Offline' and hence can't be reached for a conference. - Status is 'Online' and can be reached for a conference or a direct call. - Status is 'Busy' in conference and can't can be reached for another conference or a direct call. - Status is 'BusyInOwnRoom' in conference in own personal room and can't can be reached for another conference. - Status is 'Ringing' endpoint associated with member start to ring on receive direct call or invite event from other part. - Status is 'RingAccepted' endpoint associated with member accept the call from other part. - Status is 'RingRejected' endpoint associated with member reject the call from other part. - Status is 'RingNoAnswer' endpoint associated with member is not answered in some period of time. - Status is 'Alerting' endpoint associated with member is alerting about income call. - Status is 'AlertCancelled' endpoint associated with member is stop to be alerting about income call.
</xs:documentation>

    </xs:annotation>

    <xs:simpleType>

      <xs:restriction base="xs:string">

        <xs:enumeration value="Offline"/>

        <xs:enumeration value="Online"/>

        <xs:enumeration value="Busy"/>

        <xs:enumeration value="BusyInOwnRoom"/>

        <xs:enumeration value="Ringing"/>

        <xs:enumeration value="RingAccepted"/>

        <xs:enumeration value="RingRejected"/>

        <xs:enumeration value="RingNoAnswer"/>

        <xs:enumeration value="Alerting"/>

        <xs:enumeration value="AlertCancelled"/>

      </xs:restriction>

    </xs:simpleType>

  </xs:element>

  <xs:element name="RoomStatus">

    <xs:annotation>

      <xs:documentation>
Status is 'Empty' and hence can be used for meeting. Status is 'Full' and is not accepting any more participants to the meeting. Status is 'Occupied' some participants use the room for meeting.
</xs:documentation>

    </xs:annotation>

    <xs:simpleType>

      <xs:restriction base="xs:string">

        <xs:enumeration value="Empty"/>

        <xs:enumeration value="Full"/>

        <xs:enumeration value="Occupied"/>

      </xs:restriction>

    </xs:simpleType>

  </xs:element>

  <xs:element name="RoomMode">

    <xs:annotation>

      <xs:documentation>
- 'roomURL' (optional) means that room has an URL to be used to join the meeting. Typically used for sending invitations to users via mail, etc. - 'roomLocked' means the owner is not allowing any more participants to join the room. - is 'hasPIN' means that the participant is required to enter a PIN in order to join this room. - 'roomPIN' is the actual PIN that participant uses to enter the room. - 'hasModeratorPIN' (optional) means that the participant is required to enter a Moderator PIN in order to control this room. - 'moderatorPIN' (optional) is the actual Moderator PIN that participant uses to control the room.
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element minOccurs="0" name="roomURL" nillable="true" type="xs:string"/>

        <xs:element maxOccurs="1" minOccurs="1" name="isLocked" type="xs:boolean"/>

        <xs:element maxOccurs="1" minOccurs="1" name="hasPIN" type="xs:boolean"/>

        <xs:element minOccurs="0" name="roomPIN" nillable="true" type="xs:string"/>

        <xs:element maxOccurs="1" minOccurs="1" name="hasModeratorPIN" type="xs:boolean"/>

        <xs:element minOccurs="0" name="moderatorPIN" nillable="true" type="xs:string"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:simpleType name="EntityID">

    <xs:annotation>

      <xs:documentation>
This is an ID of addressing object in VidyoPortal (Member, Room, or Legacy device).
</xs:documentation>

    </xs:annotation>

    <xs:restriction base="xs:int"/>

  </xs:simpleType>

  <xs:element name="Entity">

    <xs:annotation>

      <xs:documentation>
This object is returned as a result of search for member, public room, or legacy device.
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="entityID" type="EntityID"/>

        <xs:element minOccurs="0" name="participantID" nillable="true" type="EntityID"/>

        <xs:element ref="EntityType"/>

        <xs:element name="displayName" type="xs:string"/>

        <xs:element name="extension" type="xs:string"/>

        <xs:element minOccurs="0" name="description" type="xs:string"/>

        <xs:element minOccurs="0" ref="Language"/>

        <xs:element minOccurs="0" ref="MemberStatus"/>

        <xs:element minOccurs="0" ref="MemberMode"/>

        <xs:element minOccurs="0" name="canCallDirect" type="xs:boolean"/>

        <xs:element minOccurs="0" name="canJoinMeeting" type="xs:boolean"/>

        <xs:element minOccurs="0" ref="RoomStatus"/>

        <xs:element minOccurs="0" ref="RoomMode"/>

        <xs:element minOccurs="0" name="canControl" type="xs:boolean"/>

        <xs:element minOccurs="0" name="audio" nillable="true" type="xs:boolean"/>

        <xs:element minOccurs="0" name="video" nillable="true" type="xs:boolean"/>

        <xs:element minOccurs="0" name="appshare" nillable="true" type="xs:boolean"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="LectureModeParticipant">

    <xs:annotation>

      <xs:documentation>
This object is returned as a result of getLectureModeParticipants
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="entityID" type="EntityID"/>

        <xs:element name="participantID" type="EntityID"/>

        <xs:element ref="EntityType"/>

        <xs:element name="displayName" type="xs:string"/>

        <xs:element name="extension" type="xs:string"/>

        <xs:element minOccurs="0" name="audio" nillable="true" type="xs:boolean"/>

        <xs:element minOccurs="0" name="video" nillable="true" type="xs:boolean"/>

        <xs:element minOccurs="0" name="appshare" nillable="true" type="xs:boolean"/>

        <xs:element minOccurs="0" name="handRaised" nillable="true" type="xs:boolean"/>

        <xs:element minOccurs="0" name="presenter" nillable="true" type="xs:boolean"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="GeneralFault">

    <xs:annotation>

      <xs:documentation>This means that the Faults happens in system.</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="ErrorMessage"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="InvalidArgumentFault">

    <xs:annotation>

      <xs:documentation>
This means that the arguments which are passed into services are wrong.
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="ErrorMessage"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="MemberNotFoundFault">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="ErrorMessage"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="MemberAlreadyExistsFault">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="ErrorMessage"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="RoomNotFoundFault">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="ErrorMessage"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="RoomAlreadyExistsFault">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="ErrorMessage"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="GroupNotFoundFault">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="ErrorMessage"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="GroupAlreadyExistsFault">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="ErrorMessage"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="NotLicensedFault">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="ErrorMessage"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="InvalidModeratorPINFormatFault">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="ErrorMessage"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="InPointToPointCallFault">

    <xs:annotation>

      <xs:documentation>
This means that the user is in point to point call and the conferenceID cannot be returned.
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="ErrorMessage"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="ChatNotAvailableInSuperFault">

    <xs:annotation>

      <xs:documentation>
Chat was set to "Unavailable" by the Super Admin and therefore chat states cannot be updated.
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="ErrorMessage"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="ScheduledRoomCreationFault">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="ErrorMessage"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:complexType name="Member">

    <xs:annotation>

      <xs:documentation>Member Description on VidyoPortal.</xs:documentation>

    </xs:annotation>

    <xs:sequence>

      <xs:element minOccurs="0" name="memberID" type="EntityID"/>

      <xs:element name="name" type="xs:string"/>

      <xs:element minOccurs="0" name="password" nillable="true" type="xs:string"/>

      <xs:element name="displayName" type="xs:string"/>

      <xs:element name="extension" type="xs:string"/>

      <xs:element ref="Language"/>

      <xs:element ref="RoleName"/>

      <xs:element name="groupName" type="xs:string"/>

      <xs:element minOccurs="0" name="proxyName" type="xs:string"/>

      <xs:element name="emailAddress" type="xs:string"/>

      <xs:element minOccurs="0" name="created" type="xs:date"/>

      <xs:element minOccurs="0" name="description" type="xs:string"/>

      <xs:element minOccurs="0" name="allowCallDirect" type="xs:boolean"/>

      <xs:element minOccurs="0" name="allowPersonalMeeting" type="xs:boolean"/>

      <xs:element name="locationTag" type="xs:string"/>

    </xs:sequence>

  </xs:complexType>

  <xs:element name="RoomType">

    <xs:simpleType>

      <xs:restriction base="xs:string">

        <xs:enumeration value="Personal"/>

        <xs:enumeration value="Public"/>

      </xs:restriction>

    </xs:simpleType>

  </xs:element>

  <xs:complexType name="Room">

    <xs:annotation>

      <xs:documentation>Room Description on VidyoPortal.</xs:documentation>

    </xs:annotation>

    <xs:sequence>

      <xs:element minOccurs="0" name="roomID" type="EntityID"/>

      <xs:element name="name" type="xs:string"/>

      <xs:element ref="RoomType"/>

      <xs:element name="ownerName" type="xs:string"/>

      <xs:element name="extension" type="xs:string"/>

      <xs:element name="groupName" type="xs:string"/>

      <xs:element ref="RoomMode"/>

      <xs:element minOccurs="0" name="description" type="xs:string"/>

    </xs:sequence>

  </xs:complexType>

  <xs:complexType name="Group">

    <xs:annotation>

      <xs:documentation>
Group Description on VidyoPortal. All the members and rooms belong to the same group share the same properties.
</xs:documentation>

    </xs:annotation>

    <xs:sequence>

      <xs:element minOccurs="0" name="groupID" type="EntityID"/>

      <xs:element name="name" type="xs:string"/>

      <xs:element name="roomMaxUsers" type="xs:string"/>

      <xs:element name="userMaxBandWidthIn" type="xs:string"/>

      <xs:element name="userMaxBandWidthOut" type="xs:string"/>

      <xs:element minOccurs="0" name="description" type="xs:string"/>

      <xs:element minOccurs="0" name="allowRecording" type="xs:boolean"/>

    </xs:sequence>

  </xs:complexType>

  <xs:complexType name="Tenant">

    <xs:annotation>

      <xs:documentation>
Tenant Description on VidyoPortal in Multitenant configuration.
</xs:documentation>

    </xs:annotation>

    <xs:sequence>

      <xs:element minOccurs="0" name="tenantID" type="EntityID"/>

      <xs:element name="name" type="xs:string"/>

      <xs:element name="url" type="xs:string"/>

      <xs:element name="prefix" type="xs:string"/>

      <xs:element minOccurs="0" name="description" type="xs:string"/>

      <xs:element maxOccurs="unbounded" minOccurs="0" name="callTo" type="EntityID"/>

    </xs:sequence>

  </xs:complexType>

  <xs:complexType name="LicenseFeatureData">

    <xs:sequence>

      <xs:element maxOccurs="1" minOccurs="1" name="Name" type="xs:string"/>

      <xs:element maxOccurs="1" minOccurs="1" name="MaxValue" type="xs:string"/>

      <xs:element maxOccurs="1" minOccurs="0" name="CurrentValue" type="xs:string"/>

    </xs:sequence>

  </xs:complexType>

  <xs:element name="GetMembersRequest">

    <xs:annotation>

      <xs:documentation>
Returns Members meeting a search criterion (optional)
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element minOccurs="0" ref="Filter"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="GetMembersResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element name="total" type="xs:int"/>

        <xs:element maxOccurs="unbounded" minOccurs="0" name="member" nillable="true" type="Member"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="GetMemberRequest">

    <xs:annotation>

      <xs:documentation>Get details of a Member.</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="memberID" type="EntityID"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="GetMemberResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element name="member" type="Member"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="AddMemberRequest">

    <xs:complexType>

      <xs:sequence>

        <xs:element name="member" type="Member"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="AddMemberResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="UpdateMemberRequest">

    <xs:complexType>

      <xs:sequence>

        <xs:element name="memberID" type="EntityID"/>

        <xs:element name="member" type="Member"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="UpdateMemberResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="DeleteMemberRequest">

    <xs:complexType>

      <xs:sequence>

        <xs:element name="memberID" type="EntityID"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="DeleteMemberResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="GetRoomsRequest">

    <xs:annotation>

      <xs:documentation>
Returns Rooms meeting a search criterion (optional)
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element minOccurs="0" ref="Filter"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="GetRoomsResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element name="total" type="xs:int"/>

        <xs:element maxOccurs="unbounded" minOccurs="0" name="room" nillable="true" type="Room"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="GetRoomRequest">

    <xs:annotation>

      <xs:documentation>Get details of a Room.</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="roomID" type="EntityID"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="GetRoomResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element name="room" type="Room"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="AddRoomRequest">

    <xs:complexType>

      <xs:sequence>

        <xs:element name="room" type="Room"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="AddRoomResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="UpdateRoomRequest">

    <xs:complexType>

      <xs:sequence>

        <xs:element name="roomID" type="EntityID"/>

        <xs:element name="room" type="Room"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="UpdateRoomResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="DeleteRoomRequest">

    <xs:complexType>

      <xs:sequence>

        <xs:element name="roomID" type="EntityID"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="DeleteRoomResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="EnableRoomRequest">

    <xs:annotation>

      <xs:documentation>Enable or disable a room.</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="roomID" type="EntityID"/>

        <xs:element name="enabled" type="xs:boolean"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="EnableRoomResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="RoomIsEnabledRequest">

    <xs:annotation>

      <xs:documentation>Determine if a room is enabled.</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="roomID" type="EntityID"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="RoomIsEnabledResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element name="enabled" type="xs:boolean"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="EnableScheduledRoomRequest">

    <xs:annotation>

      <xs:documentation>Enable or disable a scheduled room.</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="extension">

          <xs:simpleType>

            <xs:restriction base="xs:string">

              <xs:minLength value="1"/>

            </xs:restriction>

          </xs:simpleType>

        </xs:element>

        <xs:element minOccurs="0" name="pin">

          <xs:simpleType>

            <xs:restriction base="xs:string">

              <xs:minLength value="1"/>

            </xs:restriction>

          </xs:simpleType>

        </xs:element>

        <xs:element name="enabled" type="xs:boolean"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="EnableScheduledRoomResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="ScheduledRoomIsEnabledRequest">

    <xs:annotation>

      <xs:documentation>Determine if a scheduled room is enabled.</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="extension">

          <xs:simpleType>

            <xs:restriction base="xs:string">

              <xs:minLength value="1"/>

            </xs:restriction>

          </xs:simpleType>

        </xs:element>

        <xs:element minOccurs="0" name="pin">

          <xs:simpleType>

            <xs:restriction base="xs:string">

              <xs:minLength value="1"/>

            </xs:restriction>

          </xs:simpleType>

        </xs:element>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="ScheduledRoomIsEnabledResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element name="enabled" type="xs:boolean"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="GetGroupsRequest">

    <xs:annotation>

      <xs:documentation>
Returns Groups meeting a search criterion (optional)
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element minOccurs="0" ref="Filter"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="GetGroupsResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element name="total" type="xs:int"/>

        <xs:element maxOccurs="unbounded" minOccurs="0" name="group" nillable="true" type="Group"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="GetGroupRequest">

    <xs:annotation>

      <xs:documentation>Get details of a Group.</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="groupID" type="EntityID"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="GetGroupResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element name="group" type="Group"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="AddGroupRequest">

    <xs:complexType>

      <xs:sequence>

        <xs:element name="group" type="Group"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="AddGroupResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="UpdateGroupRequest">

    <xs:complexType>

      <xs:sequence>

        <xs:element name="groupID" type="EntityID"/>

        <xs:element name="group" type="Group"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="UpdateGroupResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="DeleteGroupRequest">

    <xs:complexType>

      <xs:sequence>

        <xs:element name="groupID" type="EntityID"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="DeleteGroupResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="GetParticipantsRequest">

    <xs:annotation>

      <xs:documentation>
Request to list the participants in a meeting as idenfied by EntityId. To list the participants in a personal room belonging to a Member, the EntityID must be set to the Member.
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="conferenceID" type="EntityID"/>

        <xs:element minOccurs="0" ref="Filter"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="GetParticipantsResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element name="total" type="xs:int"/>

        <xs:element minOccurs="0" name="recorderID" nillable="true" type="xs:int"/>

        <xs:element minOccurs="0" name="recorderName" nillable="true" type="xs:string"/>

        <xs:element minOccurs="0" name="paused" nillable="true" type="xs:boolean"/>

        <xs:element minOccurs="0" name="webcast" nillable="true" type="xs:boolean"/>

        <xs:element maxOccurs="unbounded" minOccurs="0" ref="Entity"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="GetLectureModeParticipantsRequest">

    <xs:annotation>

      <xs:documentation>
Request to list the participants in a meeting as identified by EntityId. To list the participants in a personal room belonging to a Member, the EntityID must be set to the Member. Similar to GetParticipants but supports Lecture Mode.
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="conferenceID" type="EntityID"/>

        <xs:element minOccurs="0" ref="Filter"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="GetLectureModeParticipantsResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element name="total" type="xs:int"/>

        <xs:element minOccurs="0" name="recorderID" nillable="true" type="xs:int"/>

        <xs:element minOccurs="0" name="recorderName" nillable="true" type="xs:string"/>

        <xs:element minOccurs="0" name="paused" nillable="true" type="xs:boolean"/>

        <xs:element minOccurs="0" name="webcast" nillable="true" type="xs:boolean"/>

        <xs:element minOccurs="0" name="lectureMode" nillable="true" type="xs:boolean"/>

        <xs:element maxOccurs="unbounded" minOccurs="0" ref="LectureModeParticipant"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="InviteToConferenceRequest">

    <xs:annotation>

      <xs:documentation>Invites a Member to a room.</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="conferenceID" type="EntityID"/>

        <xs:choice>

          <xs:element name="entityID" type="EntityID"/>

          <xs:element name="invite" type="xs:string"/>

        </xs:choice>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="InviteToConferenceResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="CancelOutboundCallRequest">

    <xs:annotation>

      <xs:documentation>
A moderator has invited a user to join the conference but immediately after making the call, the moderator decides to cancel the invitation.
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="conferenceID" type="EntityID"/>

        <xs:element name="entityID" type="EntityID"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="CancelOutboundCallResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="LeaveConferenceRequest">

    <xs:annotation>

      <xs:documentation>
Request to remove the EntityID (Endpoint) from the conference.
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="conferenceID" type="EntityID"/>

        <xs:element name="participantID" type="EntityID"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="LeaveConferenceResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="MuteAudioRequest">

    <xs:annotation>

      <xs:documentation>
Request to mute the audio for a given EntityID (Endpoint) in the conference.
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="conferenceID" type="EntityID"/>

        <xs:element name="participantID" type="EntityID"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="MuteAudioResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="UnmuteAudioRequest">

    <xs:annotation>

      <xs:documentation>
Request to unmute the audio for a given EntityID (Endpoint) in the conference.
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="conferenceID" type="EntityID"/>

        <xs:element name="participantID" type="EntityID"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="UnmuteAudioResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="StartVideoRequest">

    <xs:annotation>

      <xs:documentation>
Request to start the video for a given EntityID (Endpoint) in the conference.
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="conferenceID" type="EntityID"/>

        <xs:element name="participantID" type="EntityID"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="StartVideoResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="StopVideoRequest">

    <xs:annotation>

      <xs:documentation>
Request to stop the video for a given EntityID (Endpoint) in the conference.
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="conferenceID" type="EntityID"/>

        <xs:element name="participantID" type="EntityID"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="StopVideoResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="CreateRoomURLRequest">

    <xs:annotation>

      <xs:documentation>
Request to create a URL for a Room or a Member's personal room.
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="roomID" type="EntityID"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="CreateRoomURLResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="RemoveRoomURLRequest">

    <xs:annotation>

      <xs:documentation>
Request to delete a URL for a Room or a Member's personal room.
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="roomID" type="EntityID"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="RemoveRoomURLResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="CreateRoomPINRequest">

    <xs:annotation>

      <xs:documentation>
Create a PIN for a Room or a Member's personal room.
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="roomID" type="EntityID"/>

        <xs:element name="PIN" type="xs:string"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="CreateRoomPINResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="RemoveRoomPINRequest">

    <xs:annotation>

      <xs:documentation>
Removes a PIN for a Room or a Member's personal room.
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="roomID" type="EntityID"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="RemoveRoomPINResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="UpdatePasswordRequest">

    <xs:annotation>

      <xs:documentation>Updates a Member's password.</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="password" type="xs:string"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="UpdatePasswordResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="UpdateLanguageRequest">

    <xs:annotation>

      <xs:documentation>Updates a Member's language settings.</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="Language"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="UpdateLanguageResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="GetLicenseDataRequest" nillable="true">

    <xs:annotation>

      <xs:documentation>Request for currently effective licese data</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence/>

    </xs:complexType>

  </xs:element>

  <xs:element name="GetLicenseDataResponse">

    <xs:annotation>

      <xs:documentation>
License Data currently in effect. Feature names 'Ports', 'Seats', 'Installs'
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element maxOccurs="unbounded" name="LicenseFeature" type="LicenseFeatureData"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:complexType name="Recorder">

    <xs:annotation>

      <xs:documentation>Available Recording Profile</xs:documentation>

    </xs:annotation>

    <xs:sequence>

      <xs:element name="recorderPrefix" type="xs:string"/>

      <xs:element name="description" type="xs:string"/>

    </xs:sequence>

  </xs:complexType>

  <xs:element name="GetRecordingProfilesRequest">

    <xs:annotation>

      <xs:documentation>Recording Profiles Request</xs:documentation>

    </xs:annotation>

  </xs:element>

  <xs:element name="GetRecordingProfilesResponse">

    <xs:annotation>

      <xs:documentation>Recording Profiles Response</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="total" type="xs:int"/>

        <xs:element maxOccurs="unbounded" minOccurs="0" name="recorder" nillable="true" type="Recorder"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="StartRecordingRequest">

    <xs:annotation>

      <xs:documentation>
Request to record the video for a given roomId and profileId.
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="conferenceID" type="EntityID"/>

        <xs:element name="recorderPrefix" type="xs:string"/>

        <xs:element name="webcast" type="xs:boolean"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="StartRecordingResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="GetPortalVersionRequest">

    <xs:annotation>

      <xs:documentation>Portal Version Request</xs:documentation>

    </xs:annotation>

  </xs:element>

  <xs:element name="GetPortalVersionResponse">

    <xs:annotation>

      <xs:documentation>Portal Version Response</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="portalVersion" type="xs:string"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="ResourceNotAvailableFault">

    <xs:annotation>

      <xs:documentation>
Resources are not available for the requested operation.
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="ErrorMessage"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="PauseRecordingRequest">

    <xs:annotation>

      <xs:documentation>
Request to pause the recording for a given participantID (Endpoint) in the conference.
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="conferenceID" type="EntityID"/>

        <xs:element name="recorderID" type="xs:int"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="PauseRecordingResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="ResumeRecordingRequest">

    <xs:annotation>

      <xs:documentation>
Request to resume the recording for a given participantID (Endpoint) in the conference.
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="conferenceID" type="EntityID"/>

        <xs:element name="recorderID" type="xs:int"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="ResumeRecordingResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="StopRecordingRequest">

    <xs:annotation>

      <xs:documentation>
Request to stop the recording for a given participantID (Endpoint) in the conference.
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="conferenceID" type="EntityID"/>

        <xs:element name="recorderID" type="xs:int"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="StopRecordingResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:complexType name="Location">

    <xs:annotation>

      <xs:documentation>Location Tag</xs:documentation>

    </xs:annotation>

    <xs:sequence>

      <xs:element name="locationTag" type="xs:string"/>

    </xs:sequence>

  </xs:complexType>

  <xs:element name="GetLocationTagsRequest">

    <xs:annotation>

      <xs:documentation>Request to get the available Location Tags</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element minOccurs="0" ref="Filter"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="GetLocationTagsResponse">

    <xs:annotation>

      <xs:documentation>Response containing available Location Tags</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="total" type="xs:int"/>

        <xs:element maxOccurs="unbounded" minOccurs="0" name="location" type="Location"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="GetWebcastURLRequest">

    <xs:annotation>

      <xs:documentation>
Request to get the Webcast URL and Pin Indicator for a Room
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="roomID" type="EntityID"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="GetWebcastURLResponse">

    <xs:annotation>

      <xs:documentation>
Response containing the Webcast URL and Pin Indicator for a Room
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element minOccurs="0" name="webCastURL" nillable="true" type="xs:string"/>

        <xs:element minOccurs="0" name="hasWebCastPIN" type="xs:boolean"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="CreateWebcastURLRequest">

    <xs:annotation>

      <xs:documentation>Request to create a URL for a Webcast</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="roomID" type="EntityID"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="CreateWebcastURLResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="CreateWebcastPINRequest">

    <xs:annotation>

      <xs:documentation>Request to create a PIN for a Webcast</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="roomID" type="EntityID"/>

        <xs:element name="PIN" type="xs:string"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="CreateWebcastPINResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="RemoveWebcastURLRequest">

    <xs:annotation>

      <xs:documentation>Request to remove Webcast URL for a Room</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="roomID" type="EntityID"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="RemoveWebcastURLResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="RemoveWebcastPINRequest">

    <xs:annotation>

      <xs:documentation>Request to remove PIN for a Webcast</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="roomID" type="EntityID"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="RemoveWebcastPINResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:complexType name="RoomProfile">

    <xs:annotation>

      <xs:documentation>Available Room Profile</xs:documentation>

    </xs:annotation>

    <xs:sequence>

      <xs:element name="roomProfileName" type="xs:string"/>

      <xs:element name="description" type="xs:string"/>

    </xs:sequence>

  </xs:complexType>

  <xs:element name="GetRoomProfilesRequest">

    <xs:annotation>

      <xs:documentation>Room Profiles Request</xs:documentation>

    </xs:annotation>

  </xs:element>

  <xs:element name="GetRoomProfilesResponse">

    <xs:annotation>

      <xs:documentation>Room Profiles Response</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="total" type="xs:int"/>

        <xs:element maxOccurs="unbounded" minOccurs="0" name="roomProfile" nillable="true" type="RoomProfile"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="GetRoomProfileRequest">

    <xs:annotation>

      <xs:documentation>Request to get a Profile for a room</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="roomID" type="EntityID"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="GetRoomProfileResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element name="roomProfile" nillable="true" type="RoomProfile"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="SetRoomProfileRequest">

    <xs:annotation>

      <xs:documentation>Request to set a Profile for a room</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="roomID" type="EntityID"/>

        <xs:element name="roomProfileName" type="xs:string"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="SetRoomProfileResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="RemoveRoomProfileRequest">

    <xs:annotation>

      <xs:documentation>Request to remove RoomProfile for a room</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="roomID" type="EntityID"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="RemoveRoomProfileResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="CreateModeratorPINRequest">

    <xs:annotation>

      <xs:documentation>
Create a Moderator PIN for a Room or a Member's personal room.
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="roomID" type="EntityID"/>

        <xs:element name="PIN" type="xs:string"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="CreateModeratorPINResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="RemoveModeratorPINRequest">

    <xs:annotation>

      <xs:documentation>
Removes a Moderator PIN for a Room or a Member's personal room.
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="roomID" type="EntityID"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="RemoveModeratorPINResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="GetConferenceIDRequest">

    <xs:annotation>

      <xs:documentation>
Provides the user the Conference ID to which the user is associated.
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element minOccurs="0" name="userName" nillable="true" type="xs:string"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="GetConferenceIDResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element minOccurs="0" name="conferenceID" nillable="true" type="EntityID"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="ScheduledRoomEnabledRequest">

    <xs:annotation>

      <xs:documentation>
Request to find if Scheduled Room feature is available or not.
</xs:documentation>

    </xs:annotation>

  </xs:element>

  <xs:element name="ScheduledRoomEnabledResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element maxOccurs="1" minOccurs="1" name="scheduledRoomEnabled" nillable="false" type="xs:boolean"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="DisableScheduledRoomRequest">

    <xs:annotation>

      <xs:documentation>
Request to enable/disable Scheduled Room feature for the Tenant. Scheduled Room is enabled by Default.
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element maxOccurs="1" minOccurs="1" name="disableScheduledRoom" nillable="false" type="xs:boolean"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="DisableScheduledRoomResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="CreateScheduledRoomRequest">

    <xs:annotation>

      <xs:documentation>
Request to create a Scheduled Room for given member ownerName.
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="ownerName" type="xs:string"/>
<!--  recurring flag is for experimental use -->

        <xs:element minOccurs="0" name="recurring" nillable="false">

          <xs:simpleType>

            <xs:restriction base="xs:int">

              <xs:minInclusive value="0"/>

              <xs:maxInclusive value="400"/>

            </xs:restriction>

          </xs:simpleType>

        </xs:element>

        <xs:element minOccurs="0" name="setPIN" type="xs:boolean"/>

        <xs:element minOccurs="0" name="moderatorPIN" type="xs:string"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="CreateScheduledRoomResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element name="extension">

          <xs:simpleType>

            <xs:restriction base="xs:string">

              <xs:minLength value="1"/>

            </xs:restriction>

          </xs:simpleType>

        </xs:element>

        <xs:element minOccurs="0" name="pin">

          <xs:simpleType>

            <xs:restriction base="xs:string">

              <xs:minLength value="1"/>

            </xs:restriction>

          </xs:simpleType>

        </xs:element>

        <xs:element name="inviteContent" type="xs:string"/>

        <xs:element name="roomURL" type="xs:anyURI"/>

        <xs:element minOccurs="0" name="inviteSubject" type="xs:string"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="DeleteScheduledRoomRequest">

    <xs:annotation>

      <xs:documentation>Request to delete a Scheduled Room.</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="extension">

          <xs:simpleType>

            <xs:restriction base="xs:string">

              <xs:minLength value="1"/>

            </xs:restriction>

          </xs:simpleType>

        </xs:element>

        <xs:element minOccurs="0" name="pin">

          <xs:simpleType>

            <xs:restriction base="xs:string">

              <xs:minLength value="1"/>

            </xs:restriction>

          </xs:simpleType>

        </xs:element>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="DeleteScheduledRoomResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="setChatStateAdminRequest">

    <xs:annotation>

      <xs:documentation>
The objective of this API is to set whether private and / or public chat options should be enabled / disabled on the tenant.
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element minOccurs="0" name="setPrivateChatState" type="xs:boolean"/>

        <xs:element minOccurs="0" name="setPublicChatState" type="xs:boolean"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="setChatStateAdminResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="StartLectureModeRequest">

    <xs:annotation>

      <xs:documentation>Request to start lecture mode for the conference.</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="conferenceID" type="EntityID"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="StartLectureModeResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="StopLectureModeRequest">

    <xs:annotation>

      <xs:documentation>Request to stop lecture mode for the conference.</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="conferenceID" type="EntityID"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="StopLectureModeResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="DismissRaisedHandRequest">

    <xs:annotation>

      <xs:documentation>
Request to dismiss hand of given participantID (Endpoint) in the conference in lecture mode.
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="conferenceID" type="EntityID"/>

        <xs:element name="participantID" type="EntityID"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="DismissRaisedHandResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="DismissAllRaisedHandRequest">

    <xs:annotation>

      <xs:documentation>
Request to dismiss all hands of given participantID (Endpoint) in the conference in lecture mode.
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="conferenceID" type="EntityID"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="DismissAllRaisedHandResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="SetPresenterRequest">

    <xs:annotation>

      <xs:documentation>
Request to make a given participantID (Endpoint) presenter for the conference in lecture mode.
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="conferenceID" type="EntityID"/>

        <xs:element name="participantID" type="EntityID"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="SetPresenterResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="RemovePresenterRequest">

    <xs:annotation>

      <xs:documentation>
Request to remove a given participantID (Endpoint) as presenter for the conference in lecture mode.
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element name="conferenceID" type="EntityID"/>

        <xs:element name="participantID" type="EntityID"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="RemovePresenterResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="SetTenantRoomAttributesRequest">

    <xs:annotation>

      <xs:documentation>
The objective of this API is to set Room attributes on the tenant level.
</xs:documentation>

    </xs:annotation>

    <xs:complexType>

      <xs:sequence>

        <xs:element minOccurs="0" name="setWaitingRoomState" type="xs:int"/>

        <xs:element minOccurs="0" name="supportedClientsOnly" type="xs:boolean"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

  <xs:element name="SetTenantRoomAttributesResponse">

    <xs:complexType>

      <xs:sequence>

        <xs:element ref="OK"/>

      </xs:sequence>

    </xs:complexType>

  </xs:element>

</xs:schema>
  </wsdl:types>
  <wsdl:message name="unmuteAudioOutput">
    <wsdl:part element="UnmuteAudioResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setTenantRoomAttributesInput">
    <wsdl:part element="SetTenantRoomAttributesRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRoomProfileInput">
    <wsdl:part element="GetRoomProfileRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setPresenterOutput">
    <wsdl:part element="SetPresenterResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeModeratorPINInput">
    <wsdl:part element="RemoveModeratorPINRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="dismissAllRaisedHandInput">
    <wsdl:part element="DismissAllRaisedHandRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="roomIsEnabledOutput">
    <wsdl:part element="RoomIsEnabledResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="muteAudioInput">
    <wsdl:part element="MuteAudioRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addRoomInput">
    <wsdl:part element="AddRoomRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteGroupInput">
    <wsdl:part element="DeleteGroupRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="stopRecordingOutput">
    <wsdl:part element="StopRecordingResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRoomInput">
    <wsdl:part element="DeleteRoomRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="recordProfilesInput">
    <wsdl:part element="GetRecordingProfilesRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeWebcastPINInput">
    <wsdl:part element="RemoveWebcastPINRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateMemberInput">
    <wsdl:part element="UpdateMemberRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateRoomInput">
    <wsdl:part element="UpdateRoomRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="dismissRaisedHandInput">
    <wsdl:part element="DismissRaisedHandRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removePresenterOutput">
    <wsdl:part element="RemovePresenterResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ChatNotAvailableInSuperFault">
    <wsdl:part element="ChatNotAvailableInSuperFault" name="fault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGroupsInput">
    <wsdl:part element="GetGroupsRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeRoomPINInput">
    <wsdl:part element="RemoveRoomPINRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeModeratorPINOutput">
    <wsdl:part element="RemoveModeratorPINResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLicenseDataOutput">
    <wsdl:part element="GetLicenseDataResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="disableScheduledRoomInput">
    <wsdl:part element="DisableScheduledRoomRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getParticipantsInput">
    <wsdl:part element="GetParticipantsRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InPointToPointCallFault">
    <wsdl:part element="InPointToPointCallFault" name="fault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeWebcastURLOutput">
    <wsdl:part element="RemoveWebcastURLResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLectureModeParticipantsInput">
    <wsdl:part element="GetLectureModeParticipantsRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="locationTagsInput">
    <wsdl:part element="GetLocationTagsRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setChatStateAdminOutput">
    <wsdl:part element="setChatStateAdminResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRoomProfilesOutput">
    <wsdl:part element="GetRoomProfilesResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeWebcastPINOutput">
    <wsdl:part element="RemoveWebcastPINResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="scheduledRoomEnabledInput">
    <wsdl:part element="ScheduledRoomEnabledRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addGroupOutput">
    <wsdl:part element="AddGroupResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addGroupInput">
    <wsdl:part element="AddGroupRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="scheduledRoomIsEnabledOutput">
    <wsdl:part element="ScheduledRoomIsEnabledResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="inviteToConferenceInput">
    <wsdl:part element="InviteToConferenceRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateRoomOutput">
    <wsdl:part element="UpdateRoomResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setPresenterInput">
    <wsdl:part element="SetPresenterRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="startLectureModeOutput">
    <wsdl:part element="StartLectureModeResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="resumeRecordingOutput">
    <wsdl:part element="ResumeRecordingResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createModeratorPINInput">
    <wsdl:part element="CreateModeratorPINRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="MemberNotFoundFault">
    <wsdl:part element="MemberNotFoundFault" name="fault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setRoomProfileInput">
    <wsdl:part element="SetRoomProfileRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConferenceIDOutput">
    <wsdl:part element="GetConferenceIDResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="dismissAllRaisedHandOutput">
    <wsdl:part element="DismissAllRaisedHandResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="webcastURLOutput">
    <wsdl:part element="GetWebcastURLResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getConferenceIDInput">
    <wsdl:part element="GetConferenceIDRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="portalVersionOutput">
    <wsdl:part element="GetPortalVersionResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRoomProfileOutput">
    <wsdl:part element="GetRoomProfileResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="portalVersionInput">
    <wsdl:part element="GetPortalVersionRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeRoomPINOutput">
    <wsdl:part element="RemoveRoomPINResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMemberOutput">
    <wsdl:part element="GetMemberResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GroupAlreadyExistsFault">
    <wsdl:part element="GroupAlreadyExistsFault" name="fault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="NotLicensedFault">
    <wsdl:part element="NotLicensedFault" name="fault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="MemberAlreadyExistsFault">
    <wsdl:part element="MemberAlreadyExistsFault" name="fault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteGroupOutput">
    <wsdl:part element="DeleteGroupResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createScheduledRoomInput">
    <wsdl:part element="CreateScheduledRoomRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidArgumentFault">
    <wsdl:part element="InvalidArgumentFault" name="fault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="startLectureModeInput">
    <wsdl:part element="StartLectureModeRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="stopLectureModeInput">
    <wsdl:part element="StopLectureModeRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="startVideoInput">
    <wsdl:part element="StartVideoRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setTenantRoomAttributesOutput">
    <wsdl:part element="SetTenantRoomAttributesResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="webcastURLInput">
    <wsdl:part element="GetWebcastURLRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteScheduledRoomOutput">
    <wsdl:part element="DeleteScheduledRoomResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="stopRecordingInput">
    <wsdl:part element="StopRecordingRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="InvalidModeratorPINFormatFault">
    <wsdl:part element="InvalidModeratorPINFormatFault" name="fault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getParticipantsOutput">
    <wsdl:part element="GetParticipantsResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateMemberOutput">
    <wsdl:part element="UpdateMemberResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="muteAudioOutput">
    <wsdl:part element="MuteAudioResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createWebcastURLOutput">
    <wsdl:part element="CreateWebcastURLResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="startRecordingOutput">
    <wsdl:part element="StartRecordingResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createWebcastPINOutput">
    <wsdl:part element="CreateWebcastPINResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="stopVideoInput">
    <wsdl:part element="StopVideoRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="RoomNotFoundFault">
    <wsdl:part element="RoomNotFoundFault" name="fault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGroupInput">
    <wsdl:part element="GetGroupRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMembersOutput">
    <wsdl:part element="GetMembersResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="leaveConferenceOutput">
    <wsdl:part element="LeaveConferenceResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="RoomAlreadyExistsFault">
    <wsdl:part element="RoomAlreadyExistsFault" name="fault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="enableRoomOutput">
    <wsdl:part element="EnableRoomResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="unmuteAudioInput">
    <wsdl:part element="UnmuteAudioRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMembersInput">
    <wsdl:part element="GetMembersRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLicenseDataInput">
    <wsdl:part element="GetLicenseDataRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="enableRoomInput">
    <wsdl:part element="EnableRoomRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="inviteToConferenceOutput">
    <wsdl:part element="InviteToConferenceResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeRoomURLOutput">
    <wsdl:part element="RemoveRoomURLResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addRoomOutput">
    <wsdl:part element="AddRoomResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GeneralFault">
    <wsdl:part element="GeneralFault" name="fault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteRoomOutput">
    <wsdl:part element="DeleteRoomResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGroupOutput">
    <wsdl:part element="GetGroupResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteMemberInput">
    <wsdl:part element="DeleteMemberRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="enableScheduledRoomOutput">
    <wsdl:part element="EnableScheduledRoomResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="enableScheduledRoomInput">
    <wsdl:part element="EnableScheduledRoomRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="stopVideoOutput">
    <wsdl:part element="StopVideoResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setRoomProfileOutput">
    <wsdl:part element="SetRoomProfileResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRoomProfilesInput">
    <wsdl:part element="GetRoomProfilesRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMemberInput">
    <wsdl:part element="GetMemberRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="cancelOutboundCallInput">
    <wsdl:part element="CancelOutboundCallRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateGroupOutput">
    <wsdl:part element="UpdateGroupResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="pauseRecordingOutput">
    <wsdl:part element="PauseRecordingResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="pauseRecordingInput">
    <wsdl:part element="PauseRecordingRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ScheduledRoomCreationFault">
    <wsdl:part element="ScheduledRoomCreationFault" name="fault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGroupsOutput">
    <wsdl:part element="GetGroupsResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeRoomURLInput">
    <wsdl:part element="RemoveRoomURLRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setChatStateAdminInput">
    <wsdl:part element="setChatStateAdminRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createModeratorPINOutput">
    <wsdl:part element="CreateModeratorPINResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeRoomProfileInput">
    <wsdl:part element="RemoveRoomProfileRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRoomsOutput">
    <wsdl:part element="GetRoomsResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLectureModeParticipantsOutput">
    <wsdl:part element="GetLectureModeParticipantsResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="startRecordingInput">
    <wsdl:part element="StartRecordingRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="dismissRaisedHandOutput">
    <wsdl:part element="DismissRaisedHandResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="scheduledRoomIsEnabledInput">
    <wsdl:part element="ScheduledRoomIsEnabledRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removePresenterInput">
    <wsdl:part element="RemovePresenterRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRoomURLOutput">
    <wsdl:part element="CreateRoomURLResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="disableScheduledRoomOutput">
    <wsdl:part element="DisableScheduledRoomResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRoomInput">
    <wsdl:part element="GetRoomRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeRoomProfileOutput">
    <wsdl:part element="RemoveRoomProfileResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRoomURLInput">
    <wsdl:part element="CreateRoomURLRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="stopLectureModeOutput">
    <wsdl:part element="StopLectureModeResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteScheduledRoomInput">
    <wsdl:part element="DeleteScheduledRoomRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="startVideoOutput">
    <wsdl:part element="StartVideoResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createScheduledRoomOutput">
    <wsdl:part element="CreateScheduledRoomResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="roomIsEnabledInput">
    <wsdl:part element="RoomIsEnabledRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createWebcastURLInput">
    <wsdl:part element="CreateWebcastURLRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="scheduledRoomEnabledOutput">
    <wsdl:part element="ScheduledRoomEnabledResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addMemberOutput">
    <wsdl:part element="AddMemberResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="leaveConferenceInput">
    <wsdl:part element="LeaveConferenceRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteMemberOutput">
    <wsdl:part element="DeleteMemberResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRoomPINOutput">
    <wsdl:part element="CreateRoomPINResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateGroupInput">
    <wsdl:part element="UpdateGroupRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeWebcastURLInput">
    <wsdl:part element="RemoveWebcastURLRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="GroupNotFoundFault">
    <wsdl:part element="GroupNotFoundFault" name="fault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="resumeRecordingInput">
    <wsdl:part element="ResumeRecordingRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ResourceNotAvailableFault">
    <wsdl:part element="ResourceNotAvailableFault" name="fault">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addMemberInput">
    <wsdl:part element="AddMemberRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createRoomPINInput">
    <wsdl:part element="CreateRoomPINRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="cancelOutboundCallOutput">
    <wsdl:part element="CancelOutboundCallResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="locationTagsOutput">
    <wsdl:part element="GetLocationTagsResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRoomsInput">
    <wsdl:part element="GetRoomsRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="createWebcastPINInput">
    <wsdl:part element="CreateWebcastPINRequest" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRoomOutput">
    <wsdl:part element="GetRoomResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="recordProfilesOutput">
    <wsdl:part element="GetRecordingProfilesResponse" name="parameter">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="VidyoPortalAdminServicePortType">
    <wsdl:operation name="getMembers">
      <wsdl:input message="getMembersInput">
    </wsdl:input>
      <wsdl:output message="getMembersOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMember">
      <wsdl:input message="getMemberInput">
    </wsdl:input>
      <wsdl:output message="getMemberOutput">
    </wsdl:output>
      <wsdl:fault message="MemberNotFoundFault" name="MemberNotFoundFault">
    </wsdl:fault>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addMember">
      <wsdl:input message="addMemberInput">
    </wsdl:input>
      <wsdl:output message="addMemberOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="MemberAlreadyExistsFault" name="MemberAlreadyExistsFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateMember">
      <wsdl:input message="updateMemberInput">
    </wsdl:input>
      <wsdl:output message="updateMemberOutput">
    </wsdl:output>
      <wsdl:fault message="MemberNotFoundFault" name="MemberNotFoundFault">
    </wsdl:fault>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteMember">
      <wsdl:input message="deleteMemberInput">
    </wsdl:input>
      <wsdl:output message="deleteMemberOutput">
    </wsdl:output>
      <wsdl:fault message="MemberNotFoundFault" name="MemberNotFoundFault">
    </wsdl:fault>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRooms">
      <wsdl:input message="getRoomsInput">
    </wsdl:input>
      <wsdl:output message="getRoomsOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRoom">
      <wsdl:input message="getRoomInput">
    </wsdl:input>
      <wsdl:output message="getRoomOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="RoomNotFoundFault" name="RoomNotFoundFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRoom">
      <wsdl:input message="addRoomInput">
    </wsdl:input>
      <wsdl:output message="addRoomOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidModeratorPINFormatFault" name="InvalidModeratorPINFormatFault">
    </wsdl:fault>
      <wsdl:fault message="RoomAlreadyExistsFault" name="RoomAlreadyExistsFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateRoom">
      <wsdl:input message="updateRoomInput">
    </wsdl:input>
      <wsdl:output message="updateRoomOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="RoomNotFoundFault" name="RoomNotFoundFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidModeratorPINFormatFault" name="InvalidModeratorPINFormatFault">
    </wsdl:fault>
      <wsdl:fault message="RoomAlreadyExistsFault" name="RoomAlreadyExistsFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteRoom">
      <wsdl:input message="deleteRoomInput">
    </wsdl:input>
      <wsdl:output message="deleteRoomOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="RoomNotFoundFault" name="RoomNotFoundFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="enableRoom">
      <wsdl:input message="enableRoomInput">
    </wsdl:input>
      <wsdl:output message="enableRoomOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="RoomNotFoundFault" name="RoomNotFoundFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="roomIsEnabled">
      <wsdl:input message="roomIsEnabledInput">
    </wsdl:input>
      <wsdl:output message="roomIsEnabledOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="RoomNotFoundFault" name="RoomNotFoundFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="enableScheduledRoom">
      <wsdl:input message="enableScheduledRoomInput">
    </wsdl:input>
      <wsdl:output message="enableScheduledRoomOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="RoomNotFoundFault" name="RoomNotFoundFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="scheduledRoomIsEnabled">
      <wsdl:input message="scheduledRoomIsEnabledInput">
    </wsdl:input>
      <wsdl:output message="scheduledRoomIsEnabledOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="RoomNotFoundFault" name="RoomNotFoundFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGroups">
      <wsdl:input message="getGroupsInput">
    </wsdl:input>
      <wsdl:output message="getGroupsOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGroup">
      <wsdl:input message="getGroupInput">
    </wsdl:input>
      <wsdl:output message="getGroupOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GroupNotFoundFault" name="GroupNotFoundFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addGroup">
      <wsdl:input message="addGroupInput">
    </wsdl:input>
      <wsdl:output message="addGroupOutput">
    </wsdl:output>
      <wsdl:fault message="GroupAlreadyExistsFault" name="GroupAlreadyExistsFault">
    </wsdl:fault>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateGroup">
      <wsdl:input message="updateGroupInput">
    </wsdl:input>
      <wsdl:output message="updateGroupOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GroupNotFoundFault" name="GroupNotFoundFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteGroup">
      <wsdl:input message="deleteGroupInput">
    </wsdl:input>
      <wsdl:output message="deleteGroupOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GroupNotFoundFault" name="GroupNotFoundFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getParticipants">
      <wsdl:input message="getParticipantsInput">
    </wsdl:input>
      <wsdl:output message="getParticipantsOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLectureModeParticipants">
      <wsdl:input message="getLectureModeParticipantsInput">
    </wsdl:input>
      <wsdl:output message="getLectureModeParticipantsOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="inviteToConference">
      <wsdl:input message="inviteToConferenceInput">
    </wsdl:input>
      <wsdl:output message="inviteToConferenceOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelOutboundCall">
      <wsdl:input message="cancelOutboundCallInput">
    </wsdl:input>
      <wsdl:output message="cancelOutboundCallOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="leaveConference">
      <wsdl:input message="leaveConferenceInput">
    </wsdl:input>
      <wsdl:output message="leaveConferenceOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="muteAudio">
      <wsdl:input message="muteAudioInput">
    </wsdl:input>
      <wsdl:output message="muteAudioOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unmuteAudio">
      <wsdl:input message="unmuteAudioInput">
    </wsdl:input>
      <wsdl:output message="unmuteAudioOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="startVideo">
      <wsdl:input message="startVideoInput">
    </wsdl:input>
      <wsdl:output message="startVideoOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="stopVideo">
      <wsdl:input message="stopVideoInput">
    </wsdl:input>
      <wsdl:output message="stopVideoOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createRoomURL">
      <wsdl:input message="createRoomURLInput">
    </wsdl:input>
      <wsdl:output message="createRoomURLOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRoomURL">
      <wsdl:input message="removeRoomURLInput">
    </wsdl:input>
      <wsdl:output message="removeRoomURLOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createRoomPIN">
      <wsdl:input message="createRoomPINInput">
    </wsdl:input>
      <wsdl:output message="createRoomPINOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRoomPIN">
      <wsdl:input message="removeRoomPINInput">
    </wsdl:input>
      <wsdl:output message="removeRoomPINOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLicenseData">
      <wsdl:input message="getLicenseDataInput">
    </wsdl:input>
      <wsdl:output message="getLicenseDataOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPortalVersion">
      <wsdl:input message="portalVersionInput">
    </wsdl:input>
      <wsdl:output message="portalVersionOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRecordingProfiles">
      <wsdl:input message="recordProfilesInput">
    </wsdl:input>
      <wsdl:output message="recordProfilesOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="startRecording">
      <wsdl:input message="startRecordingInput">
    </wsdl:input>
      <wsdl:output message="startRecordingOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="ResourceNotAvailableFault" name="ResourceNotAvailableFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="pauseRecording">
      <wsdl:input message="pauseRecordingInput">
    </wsdl:input>
      <wsdl:output message="pauseRecordingOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resumeRecording">
      <wsdl:input message="resumeRecordingInput">
    </wsdl:input>
      <wsdl:output message="resumeRecordingOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="stopRecording">
      <wsdl:input message="stopRecordingInput">
    </wsdl:input>
      <wsdl:output message="stopRecordingOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLocationTags">
      <wsdl:input message="locationTagsInput">
    </wsdl:input>
      <wsdl:output message="locationTagsOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getWebcastURL">
      <wsdl:input message="webcastURLInput">
    </wsdl:input>
      <wsdl:output message="webcastURLOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createWebcastURL">
      <wsdl:input message="createWebcastURLInput">
    </wsdl:input>
      <wsdl:output message="createWebcastURLOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeWebcastURL">
      <wsdl:input message="removeWebcastURLInput">
    </wsdl:input>
      <wsdl:output message="removeWebcastURLOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createWebcastPIN">
      <wsdl:input message="createWebcastPINInput">
    </wsdl:input>
      <wsdl:output message="createWebcastPINOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeWebcastPIN">
      <wsdl:input message="removeWebcastPINInput">
    </wsdl:input>
      <wsdl:output message="removeWebcastPINOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRoomProfiles">
      <wsdl:input message="getRoomProfilesInput">
    </wsdl:input>
      <wsdl:output message="getRoomProfilesOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRoomProfile">
      <wsdl:input message="getRoomProfileInput">
    </wsdl:input>
      <wsdl:output message="getRoomProfileOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setRoomProfile">
      <wsdl:input message="setRoomProfileInput">
    </wsdl:input>
      <wsdl:output message="setRoomProfileOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRoomProfile">
      <wsdl:input message="removeRoomProfileInput">
    </wsdl:input>
      <wsdl:output message="removeRoomProfileOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createModeratorPIN">
      <wsdl:input message="createModeratorPINInput">
    </wsdl:input>
      <wsdl:output message="createModeratorPINOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidModeratorPINFormatFault" name="InvalidModeratorPINFormatFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeModeratorPIN">
      <wsdl:input message="removeModeratorPINInput">
    </wsdl:input>
      <wsdl:output message="removeModeratorPINOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConferenceID">
      <wsdl:input message="getConferenceIDInput">
    </wsdl:input>
      <wsdl:output message="getConferenceIDOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="InPointToPointCallFault" name="InPointToPointCallFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isScheduledRoomEnabled">
      <wsdl:input message="scheduledRoomEnabledInput">
    </wsdl:input>
      <wsdl:output message="scheduledRoomEnabledOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="disableScheduledRoom">
      <wsdl:input message="disableScheduledRoomInput">
    </wsdl:input>
      <wsdl:output message="disableScheduledRoomOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createScheduledRoom">
      <wsdl:input message="createScheduledRoomInput">
    </wsdl:input>
      <wsdl:output message="createScheduledRoomOutput">
    </wsdl:output>
      <wsdl:fault message="ScheduledRoomCreationFault" name="ScheduledRoomCreationFault">
    </wsdl:fault>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidModeratorPINFormatFault" name="InvalidModeratorPINFormatFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteScheduledRoom">
      <wsdl:input message="deleteScheduledRoomInput">
    </wsdl:input>
      <wsdl:output message="deleteScheduledRoomOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="RoomNotFoundFault" name="RoomNotFoundFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setChatStateAdmin">
      <wsdl:input message="setChatStateAdminInput">
    </wsdl:input>
      <wsdl:output message="setChatStateAdminOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
      <wsdl:fault message="ChatNotAvailableInSuperFault" name="ChatNotAvailableInSuperFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="startLectureMode">
      <wsdl:input message="startLectureModeInput">
    </wsdl:input>
      <wsdl:output message="startLectureModeOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="stopLectureMode">
      <wsdl:input message="stopLectureModeInput">
    </wsdl:input>
      <wsdl:output message="stopLectureModeOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="dismissRaisedHand">
      <wsdl:input message="dismissRaisedHandInput">
    </wsdl:input>
      <wsdl:output message="dismissRaisedHandOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="dismissAllRaisedHand">
      <wsdl:input message="dismissAllRaisedHandInput">
    </wsdl:input>
      <wsdl:output message="dismissAllRaisedHandOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setPresenter">
      <wsdl:input message="setPresenterInput">
    </wsdl:input>
      <wsdl:output message="setPresenterOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removePresenter">
      <wsdl:input message="removePresenterInput">
    </wsdl:input>
      <wsdl:output message="removePresenterOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setTenantRoomAttributes">
      <wsdl:input message="setTenantRoomAttributesInput">
    </wsdl:input>
      <wsdl:output message="setTenantRoomAttributesOutput">
    </wsdl:output>
      <wsdl:fault message="NotLicensedFault" name="NotLicensedFault">
    </wsdl:fault>
      <wsdl:fault message="InvalidArgumentFault" name="InvalidArgumentFault">
    </wsdl:fault>
      <wsdl:fault message="GeneralFault" name="GeneralFault">
    </wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="VidyoPortalAdminServiceBinding" type="VidyoPortalAdminServicePortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getMembers">
      <soap:operation soapAction="getMembers"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMember">
      <soap:operation soapAction="getMember"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MemberNotFoundFault">
        <soap:fault name="MemberNotFoundFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addMember">
      <soap:operation soapAction="addMember"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="MemberAlreadyExistsFault">
        <soap:fault name="MemberAlreadyExistsFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateMember">
      <soap:operation soapAction="updateMember"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MemberNotFoundFault">
        <soap:fault name="MemberNotFoundFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteMember">
      <soap:operation soapAction="deleteMember"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="MemberNotFoundFault">
        <soap:fault name="MemberNotFoundFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRooms">
      <soap:operation soapAction="getRooms"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRoom">
      <soap:operation soapAction="getRoom"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RoomNotFoundFault">
        <soap:fault name="RoomNotFoundFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addRoom">
      <soap:operation soapAction="addRoom"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidModeratorPINFormatFault">
        <soap:fault name="InvalidModeratorPINFormatFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RoomAlreadyExistsFault">
        <soap:fault name="RoomAlreadyExistsFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateRoom">
      <soap:operation soapAction="updateRoom"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RoomNotFoundFault">
        <soap:fault name="RoomNotFoundFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidModeratorPINFormatFault">
        <soap:fault name="InvalidModeratorPINFormatFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RoomAlreadyExistsFault">
        <soap:fault name="RoomAlreadyExistsFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteRoom">
      <soap:operation soapAction="deleteRoom"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RoomNotFoundFault">
        <soap:fault name="RoomNotFoundFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="enableRoom">
      <soap:operation soapAction="enableRoom"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RoomNotFoundFault">
        <soap:fault name="RoomNotFoundFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="roomIsEnabled">
      <soap:operation soapAction="roomIsEnabled"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RoomNotFoundFault">
        <soap:fault name="RoomNotFoundFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="enableScheduledRoom">
      <soap:operation soapAction="enableScheduledRoom"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RoomNotFoundFault">
        <soap:fault name="RoomNotFoundFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="scheduledRoomIsEnabled">
      <soap:operation soapAction="scheduledRoomIsEnabled"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RoomNotFoundFault">
        <soap:fault name="RoomNotFoundFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGroups">
      <soap:operation soapAction="getGroups"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGroup">
      <soap:operation soapAction="getGroup"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GroupNotFoundFault">
        <soap:fault name="GroupNotFoundFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addGroup">
      <soap:operation soapAction="addGroup"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="GroupAlreadyExistsFault">
        <soap:fault name="GroupAlreadyExistsFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateGroup">
      <soap:operation soapAction="updateGroup"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GroupNotFoundFault">
        <soap:fault name="GroupNotFoundFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteGroup">
      <soap:operation soapAction="deleteGroup"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GroupNotFoundFault">
        <soap:fault name="GroupNotFoundFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getParticipants">
      <soap:operation soapAction="getParticipants"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLectureModeParticipants">
      <soap:operation soapAction="getLectureModeParticipants"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="inviteToConference">
      <soap:operation soapAction="inviteToConference"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="cancelOutboundCall">
      <soap:operation soapAction="cancelOutboundCall"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="leaveConference">
      <soap:operation soapAction="leaveConference"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="muteAudio">
      <soap:operation soapAction="muteAudio"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="unmuteAudio">
      <soap:operation soapAction="unmuteAudio"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="startVideo">
      <soap:operation soapAction="startVideo"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="stopVideo">
      <soap:operation soapAction="stopVideo"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createRoomURL">
      <soap:operation soapAction="createRoomURL"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRoomURL">
      <soap:operation soapAction="removeRoomURL"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createRoomPIN">
      <soap:operation soapAction="createRoomPIN"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRoomPIN">
      <soap:operation soapAction="removeRoomPIN"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLicenseData">
      <soap:operation soapAction="getLicenseData"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getPortalVersion">
      <soap:operation soapAction="getPortalVersion"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRecordingProfiles">
      <soap:operation soapAction="getRecordingProfiles"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="startRecording">
      <soap:operation soapAction="startRecording"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ResourceNotAvailableFault">
        <soap:fault name="ResourceNotAvailableFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="pauseRecording">
      <soap:operation soapAction="pauseRecording"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resumeRecording">
      <soap:operation soapAction="resumeRecording"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="stopRecording">
      <soap:operation soapAction="stopRecording"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLocationTags">
      <soap:operation soapAction="getLocationTags"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getWebcastURL">
      <soap:operation soapAction="getWebcastURL"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createWebcastURL">
      <soap:operation soapAction="createWebcastURL"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeWebcastURL">
      <soap:operation soapAction="removeWebcastURL"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createWebcastPIN">
      <soap:operation soapAction="createWebcastPIN"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeWebcastPIN">
      <soap:operation soapAction="removeWebcastPIN"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRoomProfiles">
      <soap:operation soapAction="getRoomProfiles"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRoomProfile">
      <soap:operation soapAction="getRoomProfile"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setRoomProfile">
      <soap:operation soapAction="setRoomProfile"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeRoomProfile">
      <soap:operation soapAction="removeRoomProfile"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createModeratorPIN">
      <soap:operation soapAction="createRoomModeratorPIN"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidModeratorPINFormatFault">
        <soap:fault name="InvalidModeratorPINFormatFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeModeratorPIN">
      <soap:operation soapAction="removeRoomModeratorPIN"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getConferenceID">
      <soap:operation soapAction="getConferenceID"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InPointToPointCallFault">
        <soap:fault name="InPointToPointCallFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isScheduledRoomEnabled">
      <soap:operation soapAction="isScheduledRoomEnabled"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="disableScheduledRoom">
      <soap:operation soapAction="disableScheduledRoom"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createScheduledRoom">
      <soap:operation soapAction="createScheduledRoom"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ScheduledRoomCreationFault">
        <soap:fault name="ScheduledRoomCreationFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidModeratorPINFormatFault">
        <soap:fault name="InvalidModeratorPINFormatFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteScheduledRoom">
      <soap:operation soapAction="deleteScheduledRoom"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="RoomNotFoundFault">
        <soap:fault name="RoomNotFoundFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setChatStateAdmin">
      <soap:operation soapAction="setChatStateAdmin"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ChatNotAvailableInSuperFault">
        <soap:fault name="ChatNotAvailableInSuperFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="startLectureMode">
      <soap:operation soapAction="startLectureMode"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="stopLectureMode">
      <soap:operation soapAction="stopLectureMode"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="dismissRaisedHand">
      <soap:operation soapAction="dismissRaisedHand"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="dismissAllRaisedHand">
      <soap:operation soapAction="dismissAllRaisedHand"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setPresenter">
      <soap:operation soapAction="setPresenter"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removePresenter">
      <soap:operation soapAction="removePresenter"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setTenantRoomAttributes">
      <soap:operation soapAction="setTenantRoomAttributes"/>
      <wsdl:input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="NotLicensedFault">
        <soap:fault name="NotLicensedFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="InvalidArgumentFault">
        <soap:fault name="InvalidArgumentFault" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="GeneralFault">
        <soap:fault name="GeneralFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="VidyoPortalAdminService">
    <wsdl:port binding="VidyoPortalAdminServiceBinding" name="VidyoPortalAdminServicePort">
      <soap:address location="http://localhost:8080/services/v1_1/VidyoPortalAdminService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
